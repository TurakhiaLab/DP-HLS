// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module seq_align_multiple_seq_align_global_Pipeline_loop_tb (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        traceback_V_address0,
        traceback_V_ce0,
        traceback_V_q0,
        traceback_V_address1,
        traceback_V_ce1,
        traceback_V_q1,
        traceback_V_1_address0,
        traceback_V_1_ce0,
        traceback_V_1_q0,
        traceback_V_1_address1,
        traceback_V_1_ce1,
        traceback_V_1_q1,
        traceback_V_2_address0,
        traceback_V_2_ce0,
        traceback_V_2_q0,
        traceback_V_2_address1,
        traceback_V_2_ce1,
        traceback_V_2_q1,
        traceback_V_3_address0,
        traceback_V_3_ce0,
        traceback_V_3_q0,
        traceback_V_3_address1,
        traceback_V_3_ce1,
        traceback_V_3_q1,
        traceback_V_4_address0,
        traceback_V_4_ce0,
        traceback_V_4_q0,
        traceback_V_4_address1,
        traceback_V_4_ce1,
        traceback_V_4_q1,
        traceback_V_5_address0,
        traceback_V_5_ce0,
        traceback_V_5_q0,
        traceback_V_5_address1,
        traceback_V_5_ce1,
        traceback_V_5_q1,
        traceback_V_6_address0,
        traceback_V_6_ce0,
        traceback_V_6_q0,
        traceback_V_6_address1,
        traceback_V_6_ce1,
        traceback_V_6_q1,
        traceback_V_7_address0,
        traceback_V_7_ce0,
        traceback_V_7_q0,
        traceback_V_7_address1,
        traceback_V_7_ce1,
        traceback_V_7_q1,
        traceback_V_8_address0,
        traceback_V_8_ce0,
        traceback_V_8_q0,
        traceback_V_8_address1,
        traceback_V_8_ce1,
        traceback_V_8_q1,
        traceback_V_9_address0,
        traceback_V_9_ce0,
        traceback_V_9_q0,
        traceback_V_9_address1,
        traceback_V_9_ce1,
        traceback_V_9_q1,
        traceback_V_10_address0,
        traceback_V_10_ce0,
        traceback_V_10_q0,
        traceback_V_10_address1,
        traceback_V_10_ce1,
        traceback_V_10_q1,
        traceback_V_11_address0,
        traceback_V_11_ce0,
        traceback_V_11_q0,
        traceback_V_11_address1,
        traceback_V_11_ce1,
        traceback_V_11_q1,
        traceback_V_12_address0,
        traceback_V_12_ce0,
        traceback_V_12_q0,
        traceback_V_12_address1,
        traceback_V_12_ce1,
        traceback_V_12_q1,
        traceback_V_13_address0,
        traceback_V_13_ce0,
        traceback_V_13_q0,
        traceback_V_13_address1,
        traceback_V_13_ce1,
        traceback_V_13_q1,
        traceback_V_14_address0,
        traceback_V_14_ce0,
        traceback_V_14_q0,
        traceback_V_14_address1,
        traceback_V_14_ce1,
        traceback_V_14_q1,
        traceback_V_15_address0,
        traceback_V_15_ce0,
        traceback_V_15_q0,
        traceback_V_15_address1,
        traceback_V_15_ce1,
        traceback_V_15_q1
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] traceback_V_address0;
output   traceback_V_ce0;
input  [1:0] traceback_V_q0;
output  [11:0] traceback_V_address1;
output   traceback_V_ce1;
input  [1:0] traceback_V_q1;
output  [11:0] traceback_V_1_address0;
output   traceback_V_1_ce0;
input  [1:0] traceback_V_1_q0;
output  [11:0] traceback_V_1_address1;
output   traceback_V_1_ce1;
input  [1:0] traceback_V_1_q1;
output  [11:0] traceback_V_2_address0;
output   traceback_V_2_ce0;
input  [1:0] traceback_V_2_q0;
output  [11:0] traceback_V_2_address1;
output   traceback_V_2_ce1;
input  [1:0] traceback_V_2_q1;
output  [11:0] traceback_V_3_address0;
output   traceback_V_3_ce0;
input  [1:0] traceback_V_3_q0;
output  [11:0] traceback_V_3_address1;
output   traceback_V_3_ce1;
input  [1:0] traceback_V_3_q1;
output  [11:0] traceback_V_4_address0;
output   traceback_V_4_ce0;
input  [1:0] traceback_V_4_q0;
output  [11:0] traceback_V_4_address1;
output   traceback_V_4_ce1;
input  [1:0] traceback_V_4_q1;
output  [11:0] traceback_V_5_address0;
output   traceback_V_5_ce0;
input  [1:0] traceback_V_5_q0;
output  [11:0] traceback_V_5_address1;
output   traceback_V_5_ce1;
input  [1:0] traceback_V_5_q1;
output  [11:0] traceback_V_6_address0;
output   traceback_V_6_ce0;
input  [1:0] traceback_V_6_q0;
output  [11:0] traceback_V_6_address1;
output   traceback_V_6_ce1;
input  [1:0] traceback_V_6_q1;
output  [11:0] traceback_V_7_address0;
output   traceback_V_7_ce0;
input  [1:0] traceback_V_7_q0;
output  [11:0] traceback_V_7_address1;
output   traceback_V_7_ce1;
input  [1:0] traceback_V_7_q1;
output  [11:0] traceback_V_8_address0;
output   traceback_V_8_ce0;
input  [1:0] traceback_V_8_q0;
output  [11:0] traceback_V_8_address1;
output   traceback_V_8_ce1;
input  [1:0] traceback_V_8_q1;
output  [11:0] traceback_V_9_address0;
output   traceback_V_9_ce0;
input  [1:0] traceback_V_9_q0;
output  [11:0] traceback_V_9_address1;
output   traceback_V_9_ce1;
input  [1:0] traceback_V_9_q1;
output  [11:0] traceback_V_10_address0;
output   traceback_V_10_ce0;
input  [1:0] traceback_V_10_q0;
output  [11:0] traceback_V_10_address1;
output   traceback_V_10_ce1;
input  [1:0] traceback_V_10_q1;
output  [11:0] traceback_V_11_address0;
output   traceback_V_11_ce0;
input  [1:0] traceback_V_11_q0;
output  [11:0] traceback_V_11_address1;
output   traceback_V_11_ce1;
input  [1:0] traceback_V_11_q1;
output  [11:0] traceback_V_12_address0;
output   traceback_V_12_ce0;
input  [1:0] traceback_V_12_q0;
output  [11:0] traceback_V_12_address1;
output   traceback_V_12_ce1;
input  [1:0] traceback_V_12_q1;
output  [11:0] traceback_V_13_address0;
output   traceback_V_13_ce0;
input  [1:0] traceback_V_13_q0;
output  [11:0] traceback_V_13_address1;
output   traceback_V_13_ce1;
input  [1:0] traceback_V_13_q1;
output  [11:0] traceback_V_14_address0;
output   traceback_V_14_ce0;
input  [1:0] traceback_V_14_q0;
output  [11:0] traceback_V_14_address1;
output   traceback_V_14_ce1;
input  [1:0] traceback_V_14_q1;
output  [11:0] traceback_V_15_address0;
output   traceback_V_15_ce0;
input  [1:0] traceback_V_15_q0;
output  [11:0] traceback_V_15_address1;
output   traceback_V_15_ce1;
input  [1:0] traceback_V_15_q1;

reg ap_idle;
reg traceback_V_ce0;
reg traceback_V_ce1;
reg traceback_V_1_ce0;
reg traceback_V_1_ce1;
reg traceback_V_2_ce0;
reg traceback_V_2_ce1;
reg traceback_V_3_ce0;
reg traceback_V_3_ce1;
reg traceback_V_4_ce0;
reg traceback_V_4_ce1;
reg traceback_V_5_ce0;
reg traceback_V_5_ce1;
reg traceback_V_6_ce0;
reg traceback_V_6_ce1;
reg traceback_V_7_ce0;
reg traceback_V_7_ce1;
reg traceback_V_8_ce0;
reg traceback_V_8_ce1;
reg traceback_V_9_ce0;
reg traceback_V_9_ce1;
reg traceback_V_10_ce0;
reg traceback_V_10_ce1;
reg traceback_V_11_ce0;
reg traceback_V_11_ce1;
reg traceback_V_12_ce0;
reg traceback_V_12_ce1;
reg traceback_V_13_ce0;
reg traceback_V_13_ce1;
reg traceback_V_14_ce0;
reg traceback_V_14_ce1;
reg traceback_V_15_ce0;
reg traceback_V_15_ce1;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
reg   [0:0] gap_reg_498;
wire   [0:0] icmp_ln1065_1_fu_734_p2;
wire   [0:0] tmp_1_fu_740_p3;
reg   [0:0] tmp_reg_854;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_subdone;
reg   [31:0] ultimate_row_value_4_reg_841;
wire    ap_block_pp0_stage1_11001;
reg   [31:0] ultimate_col_value_4_reg_848;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [0:0] ap_phi_mux_gap_4_i_ph_phi_fu_514_p6;
wire    ap_block_pp0_stage0_11001;
wire    ap_loop_init;
wire   [0:0] icmp_ln946_fu_806_p2;
wire   [0:0] ap_phi_reg_pp0_iter1_gap_4_i_ph_reg_510;
wire   [63:0] zext_ln913_fu_616_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln587_fu_672_p1;
reg   [31:0] ultimate_row_value_fu_90;
wire   [31:0] grp_fu_547_p3;
wire   [31:0] grp_fu_535_p2;
reg   [31:0] ultimate_col_value_fu_94;
wire   [31:0] grp_fu_540_p3;
wire   [31:0] grp_fu_530_p2;
wire    ap_block_pp0_stage0;
wire   [1:0] current_traceback_V_fu_695_p18;
wire   [0:0] grp_fu_525_p2;
wire   [31:0] or_ln908_fu_570_p2;
wire   [3:0] lshr_ln1_fu_592_p4;
wire   [11:0] tmp_2_fu_602_p3;
wire   [11:0] trunc_ln992_fu_584_p1;
wire   [11:0] add_ln913_fu_610_p2;
wire   [7:0] trunc_ln992_1_fu_588_p1;
wire   [7:0] add_ln944_fu_636_p2;
wire   [3:0] lshr_ln2_fu_648_p4;
wire   [11:0] tmp_s_fu_658_p3;
wire   [11:0] add_ln944_1_fu_642_p2;
wire   [11:0] add_ln587_fu_666_p2;
wire   [3:0] trunc_ln992_2_fu_692_p1;
wire   [1:0] tmp_3_fu_768_p18;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_532;
reg    ap_condition_537;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

seq_align_multiple_mux_164_2_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 2 ),
    .din3_WIDTH( 2 ),
    .din4_WIDTH( 2 ),
    .din5_WIDTH( 2 ),
    .din6_WIDTH( 2 ),
    .din7_WIDTH( 2 ),
    .din8_WIDTH( 2 ),
    .din9_WIDTH( 2 ),
    .din10_WIDTH( 2 ),
    .din11_WIDTH( 2 ),
    .din12_WIDTH( 2 ),
    .din13_WIDTH( 2 ),
    .din14_WIDTH( 2 ),
    .din15_WIDTH( 2 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 2 ))
mux_164_2_1_1_U552(
    .din0(traceback_V_q1),
    .din1(traceback_V_1_q1),
    .din2(traceback_V_2_q1),
    .din3(traceback_V_3_q1),
    .din4(traceback_V_4_q1),
    .din5(traceback_V_5_q1),
    .din6(traceback_V_6_q1),
    .din7(traceback_V_7_q1),
    .din8(traceback_V_8_q1),
    .din9(traceback_V_9_q1),
    .din10(traceback_V_10_q1),
    .din11(traceback_V_11_q1),
    .din12(traceback_V_12_q1),
    .din13(traceback_V_13_q1),
    .din14(traceback_V_14_q1),
    .din15(traceback_V_15_q1),
    .din16(trunc_ln992_2_fu_692_p1),
    .dout(current_traceback_V_fu_695_p18)
);

seq_align_multiple_mux_164_2_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 2 ),
    .din3_WIDTH( 2 ),
    .din4_WIDTH( 2 ),
    .din5_WIDTH( 2 ),
    .din6_WIDTH( 2 ),
    .din7_WIDTH( 2 ),
    .din8_WIDTH( 2 ),
    .din9_WIDTH( 2 ),
    .din10_WIDTH( 2 ),
    .din11_WIDTH( 2 ),
    .din12_WIDTH( 2 ),
    .din13_WIDTH( 2 ),
    .din14_WIDTH( 2 ),
    .din15_WIDTH( 2 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 2 ))
mux_164_2_1_1_U553(
    .din0(traceback_V_1_q0),
    .din1(traceback_V_2_q0),
    .din2(traceback_V_3_q0),
    .din3(traceback_V_4_q0),
    .din4(traceback_V_5_q0),
    .din5(traceback_V_6_q0),
    .din6(traceback_V_7_q0),
    .din7(traceback_V_8_q0),
    .din8(traceback_V_9_q0),
    .din9(traceback_V_10_q0),
    .din10(traceback_V_11_q0),
    .din11(traceback_V_12_q0),
    .din12(traceback_V_13_q0),
    .din13(traceback_V_14_q0),
    .din14(traceback_V_15_q0),
    .din15(traceback_V_q0),
    .din16(trunc_ln992_2_fu_692_p1),
    .dout(tmp_3_fu_768_p18)
);

seq_align_multiple_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_exit_pp0_iter1_stage0) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_init == 1'b1))) begin
            gap_reg_498 <= 1'd0;
        end else if ((1'b1 == ap_condition_537)) begin
            gap_reg_498 <= ap_phi_mux_gap_4_i_ph_phi_fu_514_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ultimate_col_value_fu_94 <= 32'd255;
    end else if (((tmp_reg_854 == 1'd0) & (icmp_ln1065_1_fu_734_p2 == 1'd1) & (gap_reg_498 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ultimate_col_value_fu_94 <= grp_fu_530_p2;
    end else if ((((tmp_reg_854 == 1'd0) & (gap_reg_498 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_reg_854 == 1'd0) & (tmp_1_fu_740_p3 == 1'd1) & (icmp_ln1065_1_fu_734_p2 == 1'd0) & (gap_reg_498 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ultimate_col_value_fu_94 <= grp_fu_540_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ultimate_row_value_fu_90 <= 32'd255;
    end else if (((tmp_reg_854 == 1'd0) & (icmp_ln1065_1_fu_734_p2 == 1'd1) & (gap_reg_498 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ultimate_row_value_fu_90 <= grp_fu_535_p2;
    end else if ((((tmp_reg_854 == 1'd0) & (gap_reg_498 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_reg_854 == 1'd0) & (tmp_1_fu_740_p3 == 1'd1) & (icmp_ln1065_1_fu_734_p2 == 1'd0) & (gap_reg_498 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ultimate_row_value_fu_90 <= grp_fu_547_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_reg_854 <= or_ln908_fu_570_p2[32'd31];
        ultimate_col_value_4_reg_848 <= ultimate_col_value_fu_94;
        ultimate_row_value_4_reg_841 <= ultimate_row_value_fu_90;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((tmp_reg_854 == 1'd1) | ((tmp_1_fu_740_p3 == 1'd0) & (icmp_ln1065_1_fu_734_p2 == 1'd0) & (gap_reg_498 == 1'd0))))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_reg_854 == 1'd0)) begin
        if (((icmp_ln1065_1_fu_734_p2 == 1'd1) & (gap_reg_498 == 1'd0))) begin
            ap_phi_mux_gap_4_i_ph_phi_fu_514_p6 = 1'd0;
        end else if ((1'b1 == ap_condition_532)) begin
            ap_phi_mux_gap_4_i_ph_phi_fu_514_p6 = 1'd1;
        end else if ((gap_reg_498 == 1'd1)) begin
            ap_phi_mux_gap_4_i_ph_phi_fu_514_p6 = icmp_ln946_fu_806_p2;
        end else begin
            ap_phi_mux_gap_4_i_ph_phi_fu_514_p6 = ap_phi_reg_pp0_iter1_gap_4_i_ph_reg_510;
        end
    end else begin
        ap_phi_mux_gap_4_i_ph_phi_fu_514_p6 = ap_phi_reg_pp0_iter1_gap_4_i_ph_reg_510;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_10_ce0 = 1'b1;
    end else begin
        traceback_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_10_ce1 = 1'b1;
    end else begin
        traceback_V_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_11_ce0 = 1'b1;
    end else begin
        traceback_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_11_ce1 = 1'b1;
    end else begin
        traceback_V_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_12_ce0 = 1'b1;
    end else begin
        traceback_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_12_ce1 = 1'b1;
    end else begin
        traceback_V_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_13_ce0 = 1'b1;
    end else begin
        traceback_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_13_ce1 = 1'b1;
    end else begin
        traceback_V_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_14_ce0 = 1'b1;
    end else begin
        traceback_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_14_ce1 = 1'b1;
    end else begin
        traceback_V_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_15_ce0 = 1'b1;
    end else begin
        traceback_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_15_ce1 = 1'b1;
    end else begin
        traceback_V_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_1_ce0 = 1'b1;
    end else begin
        traceback_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_1_ce1 = 1'b1;
    end else begin
        traceback_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_2_ce0 = 1'b1;
    end else begin
        traceback_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_2_ce1 = 1'b1;
    end else begin
        traceback_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_3_ce0 = 1'b1;
    end else begin
        traceback_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_3_ce1 = 1'b1;
    end else begin
        traceback_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_4_ce0 = 1'b1;
    end else begin
        traceback_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_4_ce1 = 1'b1;
    end else begin
        traceback_V_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_5_ce0 = 1'b1;
    end else begin
        traceback_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_5_ce1 = 1'b1;
    end else begin
        traceback_V_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_6_ce0 = 1'b1;
    end else begin
        traceback_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_6_ce1 = 1'b1;
    end else begin
        traceback_V_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_7_ce0 = 1'b1;
    end else begin
        traceback_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_7_ce1 = 1'b1;
    end else begin
        traceback_V_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_8_ce0 = 1'b1;
    end else begin
        traceback_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_8_ce1 = 1'b1;
    end else begin
        traceback_V_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_9_ce0 = 1'b1;
    end else begin
        traceback_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_9_ce1 = 1'b1;
    end else begin
        traceback_V_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_ce0 = 1'b1;
    end else begin
        traceback_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_ce1 = 1'b1;
    end else begin
        traceback_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln587_fu_666_p2 = (tmp_s_fu_658_p3 + add_ln944_1_fu_642_p2);

assign add_ln913_fu_610_p2 = (tmp_2_fu_602_p3 + trunc_ln992_fu_584_p1);

assign add_ln944_1_fu_642_p2 = (trunc_ln992_fu_584_p1 + 12'd1);

assign add_ln944_fu_636_p2 = (trunc_ln992_1_fu_588_p1 + 8'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_532 = ((tmp_1_fu_740_p3 == 1'd1) & (icmp_ln1065_1_fu_734_p2 == 1'd0) & (gap_reg_498 == 1'd0));
end

always @ (*) begin
    ap_condition_537 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & ((((tmp_reg_854 == 1'd0) & (icmp_ln1065_1_fu_734_p2 == 1'd1)) | ((tmp_reg_854 == 1'd0) & (tmp_1_fu_740_p3 == 1'd1))) | ((tmp_reg_854 == 1'd0) & (gap_reg_498 == 1'd1))));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_phi_reg_pp0_iter1_gap_4_i_ph_reg_510 = 'bx;

assign grp_fu_525_p2 = ((current_traceback_V_fu_695_p18 == 2'd2) ? 1'b1 : 1'b0);

assign grp_fu_530_p2 = ($signed(ultimate_col_value_4_reg_848) + $signed(32'd4294967295));

assign grp_fu_535_p2 = ($signed(ultimate_row_value_4_reg_841) + $signed(32'd4294967295));

assign grp_fu_540_p3 = ((grp_fu_525_p2[0:0] == 1'b1) ? grp_fu_530_p2 : ultimate_col_value_4_reg_848);

assign grp_fu_547_p3 = ((grp_fu_525_p2[0:0] == 1'b1) ? ultimate_row_value_4_reg_841 : grp_fu_535_p2);

assign icmp_ln1065_1_fu_734_p2 = ((current_traceback_V_fu_695_p18 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln946_fu_806_p2 = ((tmp_3_fu_768_p18 != 2'd1) ? 1'b1 : 1'b0);

assign lshr_ln1_fu_592_p4 = {{ultimate_row_value_fu_90[7:4]}};

assign lshr_ln2_fu_648_p4 = {{add_ln944_fu_636_p2[7:4]}};

assign or_ln908_fu_570_p2 = (ultimate_row_value_fu_90 | ultimate_col_value_fu_94);

assign tmp_1_fu_740_p3 = current_traceback_V_fu_695_p18[32'd1];

assign tmp_2_fu_602_p3 = {{lshr_ln1_fu_592_p4}, {8'd0}};

assign tmp_s_fu_658_p3 = {{lshr_ln2_fu_648_p4}, {8'd0}};

assign traceback_V_10_address0 = zext_ln587_fu_672_p1;

assign traceback_V_10_address1 = zext_ln913_fu_616_p1;

assign traceback_V_11_address0 = zext_ln587_fu_672_p1;

assign traceback_V_11_address1 = zext_ln913_fu_616_p1;

assign traceback_V_12_address0 = zext_ln587_fu_672_p1;

assign traceback_V_12_address1 = zext_ln913_fu_616_p1;

assign traceback_V_13_address0 = zext_ln587_fu_672_p1;

assign traceback_V_13_address1 = zext_ln913_fu_616_p1;

assign traceback_V_14_address0 = zext_ln587_fu_672_p1;

assign traceback_V_14_address1 = zext_ln913_fu_616_p1;

assign traceback_V_15_address0 = zext_ln587_fu_672_p1;

assign traceback_V_15_address1 = zext_ln913_fu_616_p1;

assign traceback_V_1_address0 = zext_ln587_fu_672_p1;

assign traceback_V_1_address1 = zext_ln913_fu_616_p1;

assign traceback_V_2_address0 = zext_ln587_fu_672_p1;

assign traceback_V_2_address1 = zext_ln913_fu_616_p1;

assign traceback_V_3_address0 = zext_ln587_fu_672_p1;

assign traceback_V_3_address1 = zext_ln913_fu_616_p1;

assign traceback_V_4_address0 = zext_ln587_fu_672_p1;

assign traceback_V_4_address1 = zext_ln913_fu_616_p1;

assign traceback_V_5_address0 = zext_ln587_fu_672_p1;

assign traceback_V_5_address1 = zext_ln913_fu_616_p1;

assign traceback_V_6_address0 = zext_ln587_fu_672_p1;

assign traceback_V_6_address1 = zext_ln913_fu_616_p1;

assign traceback_V_7_address0 = zext_ln587_fu_672_p1;

assign traceback_V_7_address1 = zext_ln913_fu_616_p1;

assign traceback_V_8_address0 = zext_ln587_fu_672_p1;

assign traceback_V_8_address1 = zext_ln913_fu_616_p1;

assign traceback_V_9_address0 = zext_ln587_fu_672_p1;

assign traceback_V_9_address1 = zext_ln913_fu_616_p1;

assign traceback_V_address0 = zext_ln587_fu_672_p1;

assign traceback_V_address1 = zext_ln913_fu_616_p1;

assign trunc_ln992_1_fu_588_p1 = ultimate_row_value_fu_90[7:0];

assign trunc_ln992_2_fu_692_p1 = ultimate_row_value_4_reg_841[3:0];

assign trunc_ln992_fu_584_p1 = ultimate_col_value_fu_94[11:0];

assign zext_ln587_fu_672_p1 = add_ln587_fu_666_p2;

assign zext_ln913_fu_616_p1 = add_ln913_fu_610_p2;

endmodule //seq_align_multiple_seq_align_global_Pipeline_loop_tb
