

================================================================
== Vitis HLS Report for 'seq_align_Pipeline_VITIS_LOOP_78_1_VITIS_LOOP_79_2'
================================================================
* Date:           Sun Apr 16 22:10:33 2023

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:47:01 MDT 2022)
* Project:        local_seq_align_multiple_sa
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu5p-flva2104-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  4.00 ns|  2.596 ns|     1.08 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+---------+---------+---------+
    |  Latency (cycles) |  Latency (absolute) |      Interval     | Pipeline|
    |   min   |   max   |    min   |    max   |   min   |   max   |   Type  |
    +---------+---------+----------+----------+---------+---------+---------+
    |  1048578|  1048578|  4.194 ms|  4.194 ms|  1048578|  1048578|       no|
    +---------+---------+----------+----------+---------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------------------------+---------+---------+----------+-----------+-----------+---------+----------+
        |                                   |  Latency (cycles) | Iteration|  Initiation Interval  |   Trip  |          |
        |             Loop Name             |   min   |   max   |  Latency |  achieved |   target  |  Count  | Pipelined|
        +-----------------------------------+---------+---------+----------+-----------+-----------+---------+----------+
        |- VITIS_LOOP_78_1_VITIS_LOOP_79_2  |  1048576|  1048576|         2|          1|          1|  1048576|       yes|
        +-----------------------------------+---------+---------+----------+-----------+-----------+---------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.46>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%rr = alloca i32 1"   --->   Operation 5 'alloca' 'rr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%pp = alloca i32 1"   --->   Operation 6 'alloca' 'pp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 7 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.46ns)   --->   "%store_ln0 = store i21 0, i21 %indvar_flatten"   --->   Operation 8 'store' 'store_ln0' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 9 [1/1] (0.46ns)   --->   "%store_ln0 = store i11 0, i11 %pp"   --->   Operation 9 'store' 'store_ln0' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 10 [1/1] (0.46ns)   --->   "%store_ln0 = store i11 0, i11 %rr"   --->   Operation 10 'store' 'store_ln0' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body65"   --->   Operation 11 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 2.59>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%pp_1 = load i11 %pp"   --->   Operation 12 'load' 'pp_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i21 %indvar_flatten" [seq_align_multiple.cpp:78]   --->   Operation 13 'load' 'indvar_flatten_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%empty = trunc i11 %pp_1"   --->   Operation 14 'trunc' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.72ns)   --->   "%cond236 = icmp_eq  i4 %empty, i4 0"   --->   Operation 15 'icmp' 'cond236' <Predicate = true> <Delay = 0.72> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 16 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.90ns)   --->   "%icmp_ln78 = icmp_eq  i21 %indvar_flatten_load, i21 1048576" [seq_align_multiple.cpp:78]   --->   Operation 17 'icmp' 'icmp_ln78' <Predicate = true> <Delay = 0.90> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.90> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 18 [1/1] (1.12ns)   --->   "%add_ln78_1 = add i21 %indvar_flatten_load, i21 1" [seq_align_multiple.cpp:78]   --->   Operation 18 'add' 'add_ln78_1' <Predicate = true> <Delay = 1.12> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.12> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%br_ln78 = br i1 %icmp_ln78, void %for.inc68, void %for.body78.preheader.exitStub" [seq_align_multiple.cpp:78]   --->   Operation 19 'br' 'br_ln78' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%rr_load = load i11 %rr" [seq_align_multiple.cpp:79]   --->   Operation 20 'load' 'rr_load' <Predicate = (!icmp_ln78)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.96ns)   --->   "%add_ln78 = add i11 %pp_1, i11 1" [seq_align_multiple.cpp:78]   --->   Operation 21 'add' 'add_ln78' <Predicate = (!icmp_ln78)> <Delay = 0.96> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_78_1_VITIS_LOOP_79_2_str"   --->   Operation 22 'specloopname' 'specloopname_ln0' <Predicate = (!icmp_ln78)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%empty_19 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 1048576, i64 1048576, i64 1048576"   --->   Operation 23 'speclooptripcount' 'empty_19' <Predicate = (!icmp_ln78)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.79ns)   --->   "%icmp_ln79 = icmp_eq  i11 %rr_load, i11 1024" [seq_align_multiple.cpp:79]   --->   Operation 24 'icmp' 'icmp_ln79' <Predicate = (!icmp_ln78)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.37ns)   --->   "%select_ln78 = select i1 %icmp_ln79, i11 0, i11 %rr_load" [seq_align_multiple.cpp:78]   --->   Operation 25 'select' 'select_ln78' <Predicate = (!icmp_ln78)> <Delay = 0.37> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.37ns)   --->   "%select_ln78_1 = select i1 %icmp_ln79, i11 %add_ln78, i11 %pp_1" [seq_align_multiple.cpp:78]   --->   Operation 26 'select' 'select_ln78_1' <Predicate = (!icmp_ln78)> <Delay = 0.37> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%p_cast_mid2_v = partselect i6 @_ssdm_op_PartSelect.i6.i11.i32.i32, i11 %select_ln78_1, i32 4, i32 9" [seq_align_multiple.cpp:78]   --->   Operation 27 'partselect' 'p_cast_mid2_v' <Predicate = (!icmp_ln78)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%tmp = bitconcatenate i16 @_ssdm_op_BitConcatenate.i16.i6.i10, i6 %p_cast_mid2_v, i10 0" [seq_align_multiple.cpp:81]   --->   Operation 28 'bitconcatenate' 'tmp' <Predicate = (!icmp_ln78)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%empty_20 = trunc i11 %add_ln78" [seq_align_multiple.cpp:78]   --->   Operation 29 'trunc' 'empty_20' <Predicate = (!icmp_ln78)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.72ns)   --->   "%cond236_mid1 = icmp_eq  i4 %empty_20, i4 0" [seq_align_multiple.cpp:78]   --->   Operation 30 'icmp' 'cond236_mid1' <Predicate = (!icmp_ln78)> <Delay = 0.72> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.34ns)   --->   "%select_ln78_2 = select i1 %icmp_ln79, i1 %cond236_mid1, i1 %cond236" [seq_align_multiple.cpp:78]   --->   Operation 31 'select' 'select_ln78_2' <Predicate = (!icmp_ln78)> <Delay = 0.34> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 32 'specpipeline' 'specpipeline_ln0' <Predicate = (!icmp_ln78)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln81 = zext i11 %select_ln78" [seq_align_multiple.cpp:81]   --->   Operation 33 'zext' 'zext_ln81' <Predicate = (!icmp_ln78)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (1.12ns)   --->   "%add_ln81 = add i16 %tmp, i16 %zext_ln81" [seq_align_multiple.cpp:81]   --->   Operation 34 'add' 'add_ln81' <Predicate = (!icmp_ln78)> <Delay = 1.12> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.12> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln81_1 = zext i16 %add_ln81" [seq_align_multiple.cpp:81]   --->   Operation 35 'zext' 'zext_ln81_1' <Predicate = (!icmp_ln78)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%dp_matrix_V_addr = getelementptr i9 %dp_matrix_V, i64 0, i64 %zext_ln81_1" [seq_align_multiple.cpp:81]   --->   Operation 36 'getelementptr' 'dp_matrix_V_addr' <Predicate = (!icmp_ln78)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%specloopname_ln183 = specloopname void @_ssdm_op_SpecLoopName, void @empty_6"   --->   Operation 37 'specloopname' 'specloopname_ln183' <Predicate = (!icmp_ln78)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%br_ln81 = br i1 %select_ln78_2, void %arrayidx6733.exit, void %arrayidx6733.case.0" [seq_align_multiple.cpp:81]   --->   Operation 38 'br' 'br_ln81' <Predicate = (!icmp_ln78)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.96ns)   --->   "%add_ln79 = add i11 %select_ln78, i11 1" [seq_align_multiple.cpp:79]   --->   Operation 39 'add' 'add_ln79' <Predicate = (!icmp_ln78)> <Delay = 0.96> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.46ns)   --->   "%store_ln79 = store i21 %add_ln78_1, i21 %indvar_flatten" [seq_align_multiple.cpp:79]   --->   Operation 40 'store' 'store_ln79' <Predicate = (!icmp_ln78)> <Delay = 0.46>
ST_2 : Operation 41 [1/1] (0.46ns)   --->   "%store_ln79 = store i11 %select_ln78_1, i11 %pp" [seq_align_multiple.cpp:79]   --->   Operation 41 'store' 'store_ln79' <Predicate = (!icmp_ln78)> <Delay = 0.46>
ST_2 : Operation 42 [1/1] (0.46ns)   --->   "%store_ln79 = store i11 %add_ln79, i11 %rr" [seq_align_multiple.cpp:79]   --->   Operation 42 'store' 'store_ln79' <Predicate = (!icmp_ln78)> <Delay = 0.46>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%br_ln79 = br void %for.body65" [seq_align_multiple.cpp:79]   --->   Operation 43 'br' 'br_ln79' <Predicate = (!icmp_ln78)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 46 'ret' 'ret_ln0' <Predicate = (icmp_ln78)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.29>
ST_3 : Operation 44 [1/1] (1.29ns)   --->   "%store_ln81 = store i9 0, i16 %dp_matrix_V_addr" [seq_align_multiple.cpp:81]   --->   Operation 44 'store' 'store_ln81' <Predicate = (select_ln78_2)> <Delay = 1.29> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 9> <Depth = 65536> <RAM>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%br_ln81 = br void %arrayidx6733.exit" [seq_align_multiple.cpp:81]   --->   Operation 45 'br' 'br_ln81' <Predicate = (select_ln78_2)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 4ns, clock uncertainty: 1.08ns.

 <State 1>: 0.46ns
The critical path consists of the following:
	'alloca' operation ('indvar_flatten') [4]  (0 ns)
	'store' operation ('store_ln0') of constant 0 on local variable 'indvar_flatten' [5]  (0.46 ns)

 <State 2>: 2.6ns
The critical path consists of the following:
	'load' operation ('rr_load', seq_align_multiple.cpp:79) on local variable 'rr' [19]  (0 ns)
	'icmp' operation ('icmp_ln79', seq_align_multiple.cpp:79) [23]  (0.799 ns)
	'select' operation ('select_ln78', seq_align_multiple.cpp:78) [24]  (0.371 ns)
	'add' operation ('add_ln79', seq_align_multiple.cpp:79) [42]  (0.965 ns)
	'store' operation ('store_ln79', seq_align_multiple.cpp:79) of variable 'add_ln79', seq_align_multiple.cpp:79 on local variable 'rr' [45]  (0.46 ns)

 <State 3>: 1.3ns
The critical path consists of the following:
	'store' operation ('store_ln81', seq_align_multiple.cpp:81) of constant 0 on array 'dp_matrix_V' [39]  (1.3 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
