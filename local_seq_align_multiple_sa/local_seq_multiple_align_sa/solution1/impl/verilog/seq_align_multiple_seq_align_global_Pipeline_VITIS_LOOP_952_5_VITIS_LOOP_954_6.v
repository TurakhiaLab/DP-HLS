// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module seq_align_multiple_seq_align_global_Pipeline_VITIS_LOOP_952_5_VITIS_LOOP_954_6 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        traceback_V_address0,
        traceback_V_ce0,
        traceback_V_we0,
        traceback_V_d0,
        traceback_V_1_address0,
        traceback_V_1_ce0,
        traceback_V_1_we0,
        traceback_V_1_d0,
        traceback_V_2_address0,
        traceback_V_2_ce0,
        traceback_V_2_we0,
        traceback_V_2_d0,
        traceback_V_3_address0,
        traceback_V_3_ce0,
        traceback_V_3_we0,
        traceback_V_3_d0,
        traceback_V_4_address0,
        traceback_V_4_ce0,
        traceback_V_4_we0,
        traceback_V_4_d0,
        traceback_V_5_address0,
        traceback_V_5_ce0,
        traceback_V_5_we0,
        traceback_V_5_d0,
        traceback_V_6_address0,
        traceback_V_6_ce0,
        traceback_V_6_we0,
        traceback_V_6_d0,
        traceback_V_7_address0,
        traceback_V_7_ce0,
        traceback_V_7_we0,
        traceback_V_7_d0,
        traceback_V_8_address0,
        traceback_V_8_ce0,
        traceback_V_8_we0,
        traceback_V_8_d0,
        traceback_V_9_address0,
        traceback_V_9_ce0,
        traceback_V_9_we0,
        traceback_V_9_d0,
        traceback_V_10_address0,
        traceback_V_10_ce0,
        traceback_V_10_we0,
        traceback_V_10_d0,
        traceback_V_11_address0,
        traceback_V_11_ce0,
        traceback_V_11_we0,
        traceback_V_11_d0,
        traceback_V_12_address0,
        traceback_V_12_ce0,
        traceback_V_12_we0,
        traceback_V_12_d0,
        traceback_V_13_address0,
        traceback_V_13_ce0,
        traceback_V_13_we0,
        traceback_V_13_d0,
        traceback_V_14_address0,
        traceback_V_14_ce0,
        traceback_V_14_we0,
        traceback_V_14_d0,
        traceback_V_15_address0,
        traceback_V_15_ce0,
        traceback_V_15_we0,
        traceback_V_15_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [15:0] traceback_V_address0;
output   traceback_V_ce0;
output   traceback_V_we0;
output  [1:0] traceback_V_d0;
output  [15:0] traceback_V_1_address0;
output   traceback_V_1_ce0;
output   traceback_V_1_we0;
output  [1:0] traceback_V_1_d0;
output  [15:0] traceback_V_2_address0;
output   traceback_V_2_ce0;
output   traceback_V_2_we0;
output  [1:0] traceback_V_2_d0;
output  [15:0] traceback_V_3_address0;
output   traceback_V_3_ce0;
output   traceback_V_3_we0;
output  [1:0] traceback_V_3_d0;
output  [15:0] traceback_V_4_address0;
output   traceback_V_4_ce0;
output   traceback_V_4_we0;
output  [1:0] traceback_V_4_d0;
output  [15:0] traceback_V_5_address0;
output   traceback_V_5_ce0;
output   traceback_V_5_we0;
output  [1:0] traceback_V_5_d0;
output  [15:0] traceback_V_6_address0;
output   traceback_V_6_ce0;
output   traceback_V_6_we0;
output  [1:0] traceback_V_6_d0;
output  [15:0] traceback_V_7_address0;
output   traceback_V_7_ce0;
output   traceback_V_7_we0;
output  [1:0] traceback_V_7_d0;
output  [15:0] traceback_V_8_address0;
output   traceback_V_8_ce0;
output   traceback_V_8_we0;
output  [1:0] traceback_V_8_d0;
output  [15:0] traceback_V_9_address0;
output   traceback_V_9_ce0;
output   traceback_V_9_we0;
output  [1:0] traceback_V_9_d0;
output  [15:0] traceback_V_10_address0;
output   traceback_V_10_ce0;
output   traceback_V_10_we0;
output  [1:0] traceback_V_10_d0;
output  [15:0] traceback_V_11_address0;
output   traceback_V_11_ce0;
output   traceback_V_11_we0;
output  [1:0] traceback_V_11_d0;
output  [15:0] traceback_V_12_address0;
output   traceback_V_12_ce0;
output   traceback_V_12_we0;
output  [1:0] traceback_V_12_d0;
output  [15:0] traceback_V_13_address0;
output   traceback_V_13_ce0;
output   traceback_V_13_we0;
output  [1:0] traceback_V_13_d0;
output  [15:0] traceback_V_14_address0;
output   traceback_V_14_ce0;
output   traceback_V_14_we0;
output  [1:0] traceback_V_14_d0;
output  [15:0] traceback_V_15_address0;
output   traceback_V_15_ce0;
output   traceback_V_15_we0;
output  [1:0] traceback_V_15_d0;

reg ap_idle;
reg traceback_V_ce0;
reg traceback_V_we0;
reg traceback_V_1_ce0;
reg traceback_V_1_we0;
reg traceback_V_2_ce0;
reg traceback_V_2_we0;
reg traceback_V_3_ce0;
reg traceback_V_3_we0;
reg traceback_V_4_ce0;
reg traceback_V_4_we0;
reg traceback_V_5_ce0;
reg traceback_V_5_we0;
reg traceback_V_6_ce0;
reg traceback_V_6_we0;
reg traceback_V_7_ce0;
reg traceback_V_7_we0;
reg traceback_V_8_ce0;
reg traceback_V_8_we0;
reg traceback_V_9_ce0;
reg traceback_V_9_we0;
reg traceback_V_10_ce0;
reg traceback_V_10_we0;
reg traceback_V_11_ce0;
reg traceback_V_11_we0;
reg traceback_V_12_ce0;
reg traceback_V_12_we0;
reg traceback_V_13_ce0;
reg traceback_V_13_we0;
reg traceback_V_14_ce0;
reg traceback_V_14_we0;
reg traceback_V_15_ce0;
reg traceback_V_15_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln952_fu_362_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [3:0] trunc_ln952_fu_426_p1;
reg   [3:0] trunc_ln952_reg_504;
wire    ap_block_pp0_stage0_11001;
wire   [15:0] add_ln957_fu_434_p2;
reg   [15:0] add_ln957_reg_508;
wire   [63:0] zext_ln957_1_fu_461_p1;
wire    ap_block_pp0_stage0;
reg   [10:0] rr_fu_108;
wire   [10:0] add_ln954_fu_440_p2;
wire    ap_loop_init;
reg   [10:0] pp_fu_112;
wire   [10:0] select_ln952_1_fu_400_p3;
reg   [20:0] indvar_flatten13_fu_116;
wire   [20:0] add_ln952_1_fu_368_p2;
wire   [0:0] icmp_ln954_fu_386_p2;
wire   [10:0] add_ln952_fu_380_p2;
wire   [5:0] p_cast14_mid2_v_fu_408_p4;
wire   [10:0] select_ln952_fu_392_p3;
wire   [15:0] tmp_2_fu_418_p3;
wire   [15:0] zext_ln957_fu_430_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

seq_align_multiple_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten13_fu_116 <= 21'd0;
        end else if (((icmp_ln952_fu_362_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten13_fu_116 <= add_ln952_1_fu_368_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pp_fu_112 <= 11'd0;
        end else if (((icmp_ln952_fu_362_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pp_fu_112 <= select_ln952_1_fu_400_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            rr_fu_108 <= 11'd0;
        end else if (((icmp_ln952_fu_362_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            rr_fu_108 <= add_ln954_fu_440_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln952_fu_362_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln957_reg_508 <= add_ln957_fu_434_p2;
        trunc_ln952_reg_504 <= trunc_ln952_fu_426_p1;
    end
end

always @ (*) begin
    if (((icmp_ln952_fu_362_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        traceback_V_10_ce0 = 1'b1;
    end else begin
        traceback_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln952_reg_504 == 4'd10))) begin
        traceback_V_10_we0 = 1'b1;
    end else begin
        traceback_V_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        traceback_V_11_ce0 = 1'b1;
    end else begin
        traceback_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln952_reg_504 == 4'd11))) begin
        traceback_V_11_we0 = 1'b1;
    end else begin
        traceback_V_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        traceback_V_12_ce0 = 1'b1;
    end else begin
        traceback_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln952_reg_504 == 4'd12))) begin
        traceback_V_12_we0 = 1'b1;
    end else begin
        traceback_V_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        traceback_V_13_ce0 = 1'b1;
    end else begin
        traceback_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln952_reg_504 == 4'd13))) begin
        traceback_V_13_we0 = 1'b1;
    end else begin
        traceback_V_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        traceback_V_14_ce0 = 1'b1;
    end else begin
        traceback_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln952_reg_504 == 4'd14))) begin
        traceback_V_14_we0 = 1'b1;
    end else begin
        traceback_V_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        traceback_V_15_ce0 = 1'b1;
    end else begin
        traceback_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln952_reg_504 == 4'd15))) begin
        traceback_V_15_we0 = 1'b1;
    end else begin
        traceback_V_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        traceback_V_1_ce0 = 1'b1;
    end else begin
        traceback_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln952_reg_504 == 4'd1))) begin
        traceback_V_1_we0 = 1'b1;
    end else begin
        traceback_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        traceback_V_2_ce0 = 1'b1;
    end else begin
        traceback_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln952_reg_504 == 4'd2))) begin
        traceback_V_2_we0 = 1'b1;
    end else begin
        traceback_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        traceback_V_3_ce0 = 1'b1;
    end else begin
        traceback_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln952_reg_504 == 4'd3))) begin
        traceback_V_3_we0 = 1'b1;
    end else begin
        traceback_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        traceback_V_4_ce0 = 1'b1;
    end else begin
        traceback_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln952_reg_504 == 4'd4))) begin
        traceback_V_4_we0 = 1'b1;
    end else begin
        traceback_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        traceback_V_5_ce0 = 1'b1;
    end else begin
        traceback_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln952_reg_504 == 4'd5))) begin
        traceback_V_5_we0 = 1'b1;
    end else begin
        traceback_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        traceback_V_6_ce0 = 1'b1;
    end else begin
        traceback_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln952_reg_504 == 4'd6))) begin
        traceback_V_6_we0 = 1'b1;
    end else begin
        traceback_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        traceback_V_7_ce0 = 1'b1;
    end else begin
        traceback_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln952_reg_504 == 4'd7))) begin
        traceback_V_7_we0 = 1'b1;
    end else begin
        traceback_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        traceback_V_8_ce0 = 1'b1;
    end else begin
        traceback_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln952_reg_504 == 4'd8))) begin
        traceback_V_8_we0 = 1'b1;
    end else begin
        traceback_V_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        traceback_V_9_ce0 = 1'b1;
    end else begin
        traceback_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln952_reg_504 == 4'd9))) begin
        traceback_V_9_we0 = 1'b1;
    end else begin
        traceback_V_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        traceback_V_ce0 = 1'b1;
    end else begin
        traceback_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln952_reg_504 == 4'd0))) begin
        traceback_V_we0 = 1'b1;
    end else begin
        traceback_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln952_1_fu_368_p2 = (indvar_flatten13_fu_116 + 21'd1);

assign add_ln952_fu_380_p2 = (pp_fu_112 + 11'd1);

assign add_ln954_fu_440_p2 = (select_ln952_fu_392_p3 + 11'd1);

assign add_ln957_fu_434_p2 = (tmp_2_fu_418_p3 + zext_ln957_fu_430_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign icmp_ln952_fu_362_p2 = ((indvar_flatten13_fu_116 == 21'd1048576) ? 1'b1 : 1'b0);

assign icmp_ln954_fu_386_p2 = ((rr_fu_108 == 11'd1024) ? 1'b1 : 1'b0);

assign p_cast14_mid2_v_fu_408_p4 = {{select_ln952_1_fu_400_p3[9:4]}};

assign select_ln952_1_fu_400_p3 = ((icmp_ln954_fu_386_p2[0:0] == 1'b1) ? add_ln952_fu_380_p2 : pp_fu_112);

assign select_ln952_fu_392_p3 = ((icmp_ln954_fu_386_p2[0:0] == 1'b1) ? 11'd0 : rr_fu_108);

assign tmp_2_fu_418_p3 = {{p_cast14_mid2_v_fu_408_p4}, {10'd0}};

assign traceback_V_10_address0 = zext_ln957_1_fu_461_p1;

assign traceback_V_10_d0 = 2'd0;

assign traceback_V_11_address0 = zext_ln957_1_fu_461_p1;

assign traceback_V_11_d0 = 2'd0;

assign traceback_V_12_address0 = zext_ln957_1_fu_461_p1;

assign traceback_V_12_d0 = 2'd0;

assign traceback_V_13_address0 = zext_ln957_1_fu_461_p1;

assign traceback_V_13_d0 = 2'd0;

assign traceback_V_14_address0 = zext_ln957_1_fu_461_p1;

assign traceback_V_14_d0 = 2'd0;

assign traceback_V_15_address0 = zext_ln957_1_fu_461_p1;

assign traceback_V_15_d0 = 2'd0;

assign traceback_V_1_address0 = zext_ln957_1_fu_461_p1;

assign traceback_V_1_d0 = 2'd0;

assign traceback_V_2_address0 = zext_ln957_1_fu_461_p1;

assign traceback_V_2_d0 = 2'd0;

assign traceback_V_3_address0 = zext_ln957_1_fu_461_p1;

assign traceback_V_3_d0 = 2'd0;

assign traceback_V_4_address0 = zext_ln957_1_fu_461_p1;

assign traceback_V_4_d0 = 2'd0;

assign traceback_V_5_address0 = zext_ln957_1_fu_461_p1;

assign traceback_V_5_d0 = 2'd0;

assign traceback_V_6_address0 = zext_ln957_1_fu_461_p1;

assign traceback_V_6_d0 = 2'd0;

assign traceback_V_7_address0 = zext_ln957_1_fu_461_p1;

assign traceback_V_7_d0 = 2'd0;

assign traceback_V_8_address0 = zext_ln957_1_fu_461_p1;

assign traceback_V_8_d0 = 2'd0;

assign traceback_V_9_address0 = zext_ln957_1_fu_461_p1;

assign traceback_V_9_d0 = 2'd0;

assign traceback_V_address0 = zext_ln957_1_fu_461_p1;

assign traceback_V_d0 = 2'd0;

assign trunc_ln952_fu_426_p1 = select_ln952_1_fu_400_p3[3:0];

assign zext_ln957_1_fu_461_p1 = add_ln957_reg_508;

assign zext_ln957_fu_430_p1 = select_ln952_fu_392_p3;

endmodule //seq_align_multiple_seq_align_global_Pipeline_VITIS_LOOP_952_5_VITIS_LOOP_954_6
