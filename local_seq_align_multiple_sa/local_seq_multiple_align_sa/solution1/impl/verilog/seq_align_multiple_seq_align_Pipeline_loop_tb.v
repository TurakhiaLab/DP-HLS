// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module seq_align_multiple_seq_align_Pipeline_loop_tb (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ultimate_col_value,
        ultimate_row_value,
        traceback_V_address0,
        traceback_V_ce0,
        traceback_V_q0,
        traceback_V_1_address0,
        traceback_V_1_ce0,
        traceback_V_1_q0,
        traceback_V_2_address0,
        traceback_V_2_ce0,
        traceback_V_2_q0,
        traceback_V_3_address0,
        traceback_V_3_ce0,
        traceback_V_3_q0,
        traceback_V_4_address0,
        traceback_V_4_ce0,
        traceback_V_4_q0,
        traceback_V_5_address0,
        traceback_V_5_ce0,
        traceback_V_5_q0,
        traceback_V_6_address0,
        traceback_V_6_ce0,
        traceback_V_6_q0,
        traceback_V_7_address0,
        traceback_V_7_ce0,
        traceback_V_7_q0,
        traceback_V_8_address0,
        traceback_V_8_ce0,
        traceback_V_8_q0,
        traceback_V_9_address0,
        traceback_V_9_ce0,
        traceback_V_9_q0,
        traceback_V_10_address0,
        traceback_V_10_ce0,
        traceback_V_10_q0,
        traceback_V_11_address0,
        traceback_V_11_ce0,
        traceback_V_11_q0,
        traceback_V_12_address0,
        traceback_V_12_ce0,
        traceback_V_12_q0,
        traceback_V_13_address0,
        traceback_V_13_ce0,
        traceback_V_13_q0,
        traceback_V_14_address0,
        traceback_V_14_ce0,
        traceback_V_14_q0,
        traceback_V_15_address0,
        traceback_V_15_ce0,
        traceback_V_15_q0,
        traceback_V_16_address0,
        traceback_V_16_ce0,
        traceback_V_16_q0,
        traceback_V_17_address0,
        traceback_V_17_ce0,
        traceback_V_17_q0,
        traceback_V_18_address0,
        traceback_V_18_ce0,
        traceback_V_18_q0,
        traceback_V_19_address0,
        traceback_V_19_ce0,
        traceback_V_19_q0,
        traceback_V_20_address0,
        traceback_V_20_ce0,
        traceback_V_20_q0,
        traceback_V_21_address0,
        traceback_V_21_ce0,
        traceback_V_21_q0,
        traceback_V_22_address0,
        traceback_V_22_ce0,
        traceback_V_22_q0,
        traceback_V_23_address0,
        traceback_V_23_ce0,
        traceback_V_23_q0,
        traceback_V_24_address0,
        traceback_V_24_ce0,
        traceback_V_24_q0,
        traceback_V_25_address0,
        traceback_V_25_ce0,
        traceback_V_25_q0,
        traceback_V_26_address0,
        traceback_V_26_ce0,
        traceback_V_26_q0,
        traceback_V_27_address0,
        traceback_V_27_ce0,
        traceback_V_27_q0,
        traceback_V_28_address0,
        traceback_V_28_ce0,
        traceback_V_28_q0,
        traceback_V_29_address0,
        traceback_V_29_ce0,
        traceback_V_29_q0,
        traceback_V_30_address0,
        traceback_V_30_ce0,
        traceback_V_30_q0,
        traceback_V_31_address0,
        traceback_V_31_ce0,
        traceback_V_31_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] ultimate_col_value;
input  [31:0] ultimate_row_value;
output  [10:0] traceback_V_address0;
output   traceback_V_ce0;
input  [1:0] traceback_V_q0;
output  [10:0] traceback_V_1_address0;
output   traceback_V_1_ce0;
input  [1:0] traceback_V_1_q0;
output  [10:0] traceback_V_2_address0;
output   traceback_V_2_ce0;
input  [1:0] traceback_V_2_q0;
output  [10:0] traceback_V_3_address0;
output   traceback_V_3_ce0;
input  [1:0] traceback_V_3_q0;
output  [10:0] traceback_V_4_address0;
output   traceback_V_4_ce0;
input  [1:0] traceback_V_4_q0;
output  [10:0] traceback_V_5_address0;
output   traceback_V_5_ce0;
input  [1:0] traceback_V_5_q0;
output  [10:0] traceback_V_6_address0;
output   traceback_V_6_ce0;
input  [1:0] traceback_V_6_q0;
output  [10:0] traceback_V_7_address0;
output   traceback_V_7_ce0;
input  [1:0] traceback_V_7_q0;
output  [10:0] traceback_V_8_address0;
output   traceback_V_8_ce0;
input  [1:0] traceback_V_8_q0;
output  [10:0] traceback_V_9_address0;
output   traceback_V_9_ce0;
input  [1:0] traceback_V_9_q0;
output  [10:0] traceback_V_10_address0;
output   traceback_V_10_ce0;
input  [1:0] traceback_V_10_q0;
output  [10:0] traceback_V_11_address0;
output   traceback_V_11_ce0;
input  [1:0] traceback_V_11_q0;
output  [10:0] traceback_V_12_address0;
output   traceback_V_12_ce0;
input  [1:0] traceback_V_12_q0;
output  [10:0] traceback_V_13_address0;
output   traceback_V_13_ce0;
input  [1:0] traceback_V_13_q0;
output  [10:0] traceback_V_14_address0;
output   traceback_V_14_ce0;
input  [1:0] traceback_V_14_q0;
output  [10:0] traceback_V_15_address0;
output   traceback_V_15_ce0;
input  [1:0] traceback_V_15_q0;
output  [10:0] traceback_V_16_address0;
output   traceback_V_16_ce0;
input  [1:0] traceback_V_16_q0;
output  [10:0] traceback_V_17_address0;
output   traceback_V_17_ce0;
input  [1:0] traceback_V_17_q0;
output  [10:0] traceback_V_18_address0;
output   traceback_V_18_ce0;
input  [1:0] traceback_V_18_q0;
output  [10:0] traceback_V_19_address0;
output   traceback_V_19_ce0;
input  [1:0] traceback_V_19_q0;
output  [10:0] traceback_V_20_address0;
output   traceback_V_20_ce0;
input  [1:0] traceback_V_20_q0;
output  [10:0] traceback_V_21_address0;
output   traceback_V_21_ce0;
input  [1:0] traceback_V_21_q0;
output  [10:0] traceback_V_22_address0;
output   traceback_V_22_ce0;
input  [1:0] traceback_V_22_q0;
output  [10:0] traceback_V_23_address0;
output   traceback_V_23_ce0;
input  [1:0] traceback_V_23_q0;
output  [10:0] traceback_V_24_address0;
output   traceback_V_24_ce0;
input  [1:0] traceback_V_24_q0;
output  [10:0] traceback_V_25_address0;
output   traceback_V_25_ce0;
input  [1:0] traceback_V_25_q0;
output  [10:0] traceback_V_26_address0;
output   traceback_V_26_ce0;
input  [1:0] traceback_V_26_q0;
output  [10:0] traceback_V_27_address0;
output   traceback_V_27_ce0;
input  [1:0] traceback_V_27_q0;
output  [10:0] traceback_V_28_address0;
output   traceback_V_28_ce0;
input  [1:0] traceback_V_28_q0;
output  [10:0] traceback_V_29_address0;
output   traceback_V_29_ce0;
input  [1:0] traceback_V_29_q0;
output  [10:0] traceback_V_30_address0;
output   traceback_V_30_ce0;
input  [1:0] traceback_V_30_q0;
output  [10:0] traceback_V_31_address0;
output   traceback_V_31_ce0;
input  [1:0] traceback_V_31_q0;

reg ap_idle;
reg traceback_V_ce0;
reg traceback_V_1_ce0;
reg traceback_V_2_ce0;
reg traceback_V_3_ce0;
reg traceback_V_4_ce0;
reg traceback_V_5_ce0;
reg traceback_V_6_ce0;
reg traceback_V_7_ce0;
reg traceback_V_8_ce0;
reg traceback_V_9_ce0;
reg traceback_V_10_ce0;
reg traceback_V_11_ce0;
reg traceback_V_12_ce0;
reg traceback_V_13_ce0;
reg traceback_V_14_ce0;
reg traceback_V_15_ce0;
reg traceback_V_16_ce0;
reg traceback_V_17_ce0;
reg traceback_V_18_ce0;
reg traceback_V_19_ce0;
reg traceback_V_20_ce0;
reg traceback_V_21_ce0;
reg traceback_V_22_ce0;
reg traceback_V_23_ce0;
reg traceback_V_24_ce0;
reg traceback_V_25_ce0;
reg traceback_V_26_ce0;
reg traceback_V_27_ce0;
reg traceback_V_28_ce0;
reg traceback_V_29_ce0;
reg traceback_V_30_ce0;
reg traceback_V_31_ce0;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1065_fu_729_p2;
wire   [0:0] tmp_1_fu_741_p3;
reg   [0:0] tmp_reg_810;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_subdone;
wire   [31:0] grp_fu_544_p2;
reg   [31:0] reg_554;
wire    ap_block_pp0_stage0_11001;
wire   [31:0] grp_fu_549_p2;
reg   [31:0] reg_558;
reg   [31:0] ultimate_row_value_assign_load_reg_797;
wire    ap_block_pp0_stage1_11001;
reg   [31:0] ultimate_col_value_assign_load_reg_804;
reg   [0:0] icmp_ln1065_reg_974;
wire   [0:0] icmp_ln1065_1_fu_735_p2;
reg   [0:0] icmp_ln1065_1_reg_978;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln392_fu_620_p1;
wire    ap_block_pp0_stage1;
reg   [31:0] ultimate_row_value_assign_fu_108;
wire   [31:0] select_ln402_1_fu_755_p3;
reg   [31:0] ap_sig_allocacmp_ultimate_row_value_assign_load;
wire    ap_loop_init;
reg   [31:0] ultimate_col_value_assign_fu_112;
wire   [31:0] select_ln402_fu_749_p3;
reg   [31:0] ap_sig_allocacmp_ultimate_col_value_assign_load;
wire    ap_block_pp0_stage0;
wire   [31:0] or_ln390_fu_578_p2;
wire   [2:0] lshr_ln1_fu_596_p4;
wire   [10:0] tmp_3_fu_606_p3;
wire   [10:0] trunc_ln392_fu_592_p1;
wire   [10:0] add_ln392_fu_614_p2;
wire   [4:0] current_traceback_V_fu_659_p33;
wire   [1:0] current_traceback_V_fu_659_p34;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_382;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

seq_align_multiple_mux_325_2_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 2 ),
    .din3_WIDTH( 2 ),
    .din4_WIDTH( 2 ),
    .din5_WIDTH( 2 ),
    .din6_WIDTH( 2 ),
    .din7_WIDTH( 2 ),
    .din8_WIDTH( 2 ),
    .din9_WIDTH( 2 ),
    .din10_WIDTH( 2 ),
    .din11_WIDTH( 2 ),
    .din12_WIDTH( 2 ),
    .din13_WIDTH( 2 ),
    .din14_WIDTH( 2 ),
    .din15_WIDTH( 2 ),
    .din16_WIDTH( 2 ),
    .din17_WIDTH( 2 ),
    .din18_WIDTH( 2 ),
    .din19_WIDTH( 2 ),
    .din20_WIDTH( 2 ),
    .din21_WIDTH( 2 ),
    .din22_WIDTH( 2 ),
    .din23_WIDTH( 2 ),
    .din24_WIDTH( 2 ),
    .din25_WIDTH( 2 ),
    .din26_WIDTH( 2 ),
    .din27_WIDTH( 2 ),
    .din28_WIDTH( 2 ),
    .din29_WIDTH( 2 ),
    .din30_WIDTH( 2 ),
    .din31_WIDTH( 2 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 2 ))
mux_325_2_1_1_U907(
    .din0(traceback_V_q0),
    .din1(traceback_V_1_q0),
    .din2(traceback_V_2_q0),
    .din3(traceback_V_3_q0),
    .din4(traceback_V_4_q0),
    .din5(traceback_V_5_q0),
    .din6(traceback_V_6_q0),
    .din7(traceback_V_7_q0),
    .din8(traceback_V_8_q0),
    .din9(traceback_V_9_q0),
    .din10(traceback_V_10_q0),
    .din11(traceback_V_11_q0),
    .din12(traceback_V_12_q0),
    .din13(traceback_V_13_q0),
    .din14(traceback_V_14_q0),
    .din15(traceback_V_15_q0),
    .din16(traceback_V_16_q0),
    .din17(traceback_V_17_q0),
    .din18(traceback_V_18_q0),
    .din19(traceback_V_19_q0),
    .din20(traceback_V_20_q0),
    .din21(traceback_V_21_q0),
    .din22(traceback_V_22_q0),
    .din23(traceback_V_23_q0),
    .din24(traceback_V_24_q0),
    .din25(traceback_V_25_q0),
    .din26(traceback_V_26_q0),
    .din27(traceback_V_27_q0),
    .din28(traceback_V_28_q0),
    .din29(traceback_V_29_q0),
    .din30(traceback_V_30_q0),
    .din31(traceback_V_31_q0),
    .din32(current_traceback_V_fu_659_p33),
    .dout(current_traceback_V_fu_659_p34)
);

seq_align_multiple_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ultimate_col_value_assign_fu_112 <= ultimate_col_value;
    end else if (((icmp_ln1065_reg_974 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ultimate_col_value_assign_fu_112 <= reg_554;
    end else if (((icmp_ln1065_reg_974 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ultimate_col_value_assign_fu_112 <= select_ln402_fu_749_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ultimate_row_value_assign_fu_108 <= ultimate_row_value;
    end else if (((icmp_ln1065_reg_974 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ultimate_row_value_assign_fu_108 <= reg_558;
    end else if (((icmp_ln1065_reg_974 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ultimate_row_value_assign_fu_108 <= select_ln402_1_fu_755_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_810 == 1'd0) & (icmp_ln1065_fu_729_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1065_1_reg_978 <= icmp_ln1065_1_fu_735_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_810 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1065_reg_974 <= icmp_ln1065_fu_729_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_reg_810 == 1'd0) & (icmp_ln1065_fu_729_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_reg_810 == 1'd0) & (tmp_1_fu_741_p3 == 1'd1) & (icmp_ln1065_fu_729_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_554 <= grp_fu_544_p2;
        reg_558 <= grp_fu_549_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_reg_810 <= or_ln390_fu_578_p2[32'd31];
        ultimate_col_value_assign_load_reg_804 <= ap_sig_allocacmp_ultimate_col_value_assign_load;
        ultimate_row_value_assign_load_reg_797 <= ap_sig_allocacmp_ultimate_row_value_assign_load;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((tmp_reg_810 == 1'd1) | ((tmp_1_fu_741_p3 == 1'd0) & (icmp_ln1065_fu_729_p2 == 1'd0))))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_382)) begin
        if ((icmp_ln1065_reg_974 == 1'd1)) begin
            ap_sig_allocacmp_ultimate_col_value_assign_load = reg_554;
        end else if ((icmp_ln1065_reg_974 == 1'd0)) begin
            ap_sig_allocacmp_ultimate_col_value_assign_load = select_ln402_fu_749_p3;
        end else begin
            ap_sig_allocacmp_ultimate_col_value_assign_load = ultimate_col_value_assign_fu_112;
        end
    end else begin
        ap_sig_allocacmp_ultimate_col_value_assign_load = ultimate_col_value_assign_fu_112;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_382)) begin
        if ((icmp_ln1065_reg_974 == 1'd1)) begin
            ap_sig_allocacmp_ultimate_row_value_assign_load = reg_558;
        end else if ((icmp_ln1065_reg_974 == 1'd0)) begin
            ap_sig_allocacmp_ultimate_row_value_assign_load = select_ln402_1_fu_755_p3;
        end else begin
            ap_sig_allocacmp_ultimate_row_value_assign_load = ultimate_row_value_assign_fu_108;
        end
    end else begin
        ap_sig_allocacmp_ultimate_row_value_assign_load = ultimate_row_value_assign_fu_108;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_10_ce0 = 1'b1;
    end else begin
        traceback_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_11_ce0 = 1'b1;
    end else begin
        traceback_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_12_ce0 = 1'b1;
    end else begin
        traceback_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_13_ce0 = 1'b1;
    end else begin
        traceback_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_14_ce0 = 1'b1;
    end else begin
        traceback_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_15_ce0 = 1'b1;
    end else begin
        traceback_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_16_ce0 = 1'b1;
    end else begin
        traceback_V_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_17_ce0 = 1'b1;
    end else begin
        traceback_V_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_18_ce0 = 1'b1;
    end else begin
        traceback_V_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_19_ce0 = 1'b1;
    end else begin
        traceback_V_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_1_ce0 = 1'b1;
    end else begin
        traceback_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_20_ce0 = 1'b1;
    end else begin
        traceback_V_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_21_ce0 = 1'b1;
    end else begin
        traceback_V_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_22_ce0 = 1'b1;
    end else begin
        traceback_V_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_23_ce0 = 1'b1;
    end else begin
        traceback_V_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_24_ce0 = 1'b1;
    end else begin
        traceback_V_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_25_ce0 = 1'b1;
    end else begin
        traceback_V_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_26_ce0 = 1'b1;
    end else begin
        traceback_V_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_27_ce0 = 1'b1;
    end else begin
        traceback_V_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_28_ce0 = 1'b1;
    end else begin
        traceback_V_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_29_ce0 = 1'b1;
    end else begin
        traceback_V_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_2_ce0 = 1'b1;
    end else begin
        traceback_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_30_ce0 = 1'b1;
    end else begin
        traceback_V_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_31_ce0 = 1'b1;
    end else begin
        traceback_V_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_3_ce0 = 1'b1;
    end else begin
        traceback_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_4_ce0 = 1'b1;
    end else begin
        traceback_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_5_ce0 = 1'b1;
    end else begin
        traceback_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_6_ce0 = 1'b1;
    end else begin
        traceback_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_7_ce0 = 1'b1;
    end else begin
        traceback_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_8_ce0 = 1'b1;
    end else begin
        traceback_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_9_ce0 = 1'b1;
    end else begin
        traceback_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        traceback_V_ce0 = 1'b1;
    end else begin
        traceback_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln392_fu_614_p2 = (tmp_3_fu_606_p3 + trunc_ln392_fu_592_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_382 = ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign current_traceback_V_fu_659_p33 = ultimate_row_value_assign_load_reg_797[4:0];

assign grp_fu_544_p2 = ($signed(ultimate_col_value_assign_load_reg_804) + $signed(32'd4294967295));

assign grp_fu_549_p2 = ($signed(ultimate_row_value_assign_load_reg_797) + $signed(32'd4294967295));

assign icmp_ln1065_1_fu_735_p2 = ((current_traceback_V_fu_659_p34 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln1065_fu_729_p2 = ((current_traceback_V_fu_659_p34 == 2'd1) ? 1'b1 : 1'b0);

assign lshr_ln1_fu_596_p4 = {{ap_sig_allocacmp_ultimate_row_value_assign_load[7:5]}};

assign or_ln390_fu_578_p2 = (ap_sig_allocacmp_ultimate_row_value_assign_load | ap_sig_allocacmp_ultimate_col_value_assign_load);

assign select_ln402_1_fu_755_p3 = ((icmp_ln1065_1_reg_978[0:0] == 1'b1) ? ultimate_row_value_assign_load_reg_797 : reg_558);

assign select_ln402_fu_749_p3 = ((icmp_ln1065_1_reg_978[0:0] == 1'b1) ? reg_554 : ultimate_col_value_assign_load_reg_804);

assign tmp_1_fu_741_p3 = current_traceback_V_fu_659_p34[32'd1];

assign tmp_3_fu_606_p3 = {{lshr_ln1_fu_596_p4}, {8'd0}};

assign traceback_V_10_address0 = zext_ln392_fu_620_p1;

assign traceback_V_11_address0 = zext_ln392_fu_620_p1;

assign traceback_V_12_address0 = zext_ln392_fu_620_p1;

assign traceback_V_13_address0 = zext_ln392_fu_620_p1;

assign traceback_V_14_address0 = zext_ln392_fu_620_p1;

assign traceback_V_15_address0 = zext_ln392_fu_620_p1;

assign traceback_V_16_address0 = zext_ln392_fu_620_p1;

assign traceback_V_17_address0 = zext_ln392_fu_620_p1;

assign traceback_V_18_address0 = zext_ln392_fu_620_p1;

assign traceback_V_19_address0 = zext_ln392_fu_620_p1;

assign traceback_V_1_address0 = zext_ln392_fu_620_p1;

assign traceback_V_20_address0 = zext_ln392_fu_620_p1;

assign traceback_V_21_address0 = zext_ln392_fu_620_p1;

assign traceback_V_22_address0 = zext_ln392_fu_620_p1;

assign traceback_V_23_address0 = zext_ln392_fu_620_p1;

assign traceback_V_24_address0 = zext_ln392_fu_620_p1;

assign traceback_V_25_address0 = zext_ln392_fu_620_p1;

assign traceback_V_26_address0 = zext_ln392_fu_620_p1;

assign traceback_V_27_address0 = zext_ln392_fu_620_p1;

assign traceback_V_28_address0 = zext_ln392_fu_620_p1;

assign traceback_V_29_address0 = zext_ln392_fu_620_p1;

assign traceback_V_2_address0 = zext_ln392_fu_620_p1;

assign traceback_V_30_address0 = zext_ln392_fu_620_p1;

assign traceback_V_31_address0 = zext_ln392_fu_620_p1;

assign traceback_V_3_address0 = zext_ln392_fu_620_p1;

assign traceback_V_4_address0 = zext_ln392_fu_620_p1;

assign traceback_V_5_address0 = zext_ln392_fu_620_p1;

assign traceback_V_6_address0 = zext_ln392_fu_620_p1;

assign traceback_V_7_address0 = zext_ln392_fu_620_p1;

assign traceback_V_8_address0 = zext_ln392_fu_620_p1;

assign traceback_V_9_address0 = zext_ln392_fu_620_p1;

assign traceback_V_address0 = zext_ln392_fu_620_p1;

assign trunc_ln392_fu_592_p1 = ap_sig_allocacmp_ultimate_col_value_assign_load[10:0];

assign zext_ln392_fu_620_p1 = add_ln392_fu_614_p2;

endmodule //seq_align_multiple_seq_align_Pipeline_loop_tb
