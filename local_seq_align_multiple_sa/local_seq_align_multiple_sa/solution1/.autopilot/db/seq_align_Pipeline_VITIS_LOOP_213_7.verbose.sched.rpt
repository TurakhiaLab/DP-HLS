

================================================================
== Vitis HLS Report for 'seq_align_Pipeline_VITIS_LOOP_213_7'
================================================================
* Date:           Wed Jun 28 12:43:02 2023

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:47:01 MDT 2022)
* Project:        local_seq_align_multiple_sa
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvc1156-2-i


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  4.00 ns|  1.621 ns|     1.08 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+------+------+---------+
    |  Latency (cycles) |  Latency (absolute) |   Interval  | Pipeline|
    |   min   |   max   |    min   |    max   |  min |  max |   Type  |
    +---------+---------+----------+----------+------+------+---------+
    |     1026|     1026|  4.104 us|  4.104 us|  1026|  1026|       no|
    +---------+---------+----------+----------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_213_7  |     1024|     1024|         1|          1|          1|  1024|       yes|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.62>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%i_1 = alloca i32 1"   --->   Operation 4 'alloca' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %reference_string_comp_0, void @empty_0, i32 0, i32 0, void @empty_1, i32 0, i32 0, void @empty_2, void @empty_2, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_2, i32 4294967295, i32 0"   --->   Operation 5 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.42ns)   --->   "%store_ln0 = store i11 0, i11 %i_1"   --->   Operation 6 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc83"   --->   Operation 7 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%i = load i11 %i_1" [seq_align_multiple.cpp:215]   --->   Operation 8 'load' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 9 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.94ns)   --->   "%icmp_ln213 = icmp_eq  i11 %i, i11 1024" [seq_align_multiple.cpp:213]   --->   Operation 10 'icmp' 'icmp_ln213' <Predicate = true> <Delay = 0.94> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 1024, i64 1024, i64 1024"   --->   Operation 11 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.79ns)   --->   "%add_ln213 = add i11 %i, i11 1" [seq_align_multiple.cpp:213]   --->   Operation 12 'add' 'add_ln213' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%br_ln213 = br i1 %icmp_ln213, void %for.inc83.split, void %VITIS_LOOP_243_10.preheader.exitStub" [seq_align_multiple.cpp:213]   --->   Operation 13 'br' 'br_ln213' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @empty_12" [/home/AD.UCSD.EDU/swalia/xilinx/vitis/Vitis_HLS/2022.1/common/technology/autopilot/hls_stream_39.h:0]   --->   Operation 14 'specloopname' 'specloopname_ln0' <Predicate = (!icmp_ln213)> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%tmp = read i8 @_ssdm_op_Read.axis.volatile.i8P128A, i8 %reference_string_comp_0" [/home/AD.UCSD.EDU/swalia/xilinx/vitis/Vitis_HLS/2022.1/common/technology/autopilot/hls_stream_39.h:145]   --->   Operation 15 'read' 'tmp' <Predicate = (!icmp_ln213)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 123 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%lshr_ln = partselect i6 @_ssdm_op_PartSelect.i6.i11.i32.i32, i11 %i, i32 4, i32 9" [seq_align_multiple.cpp:215]   --->   Operation 16 'partselect' 'lshr_ln' <Predicate = (!icmp_ln213)> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%zext_ln215 = zext i6 %lshr_ln" [seq_align_multiple.cpp:215]   --->   Operation 17 'zext' 'zext_ln215' <Predicate = (!icmp_ln213)> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%local_reference_addr = getelementptr i8 %local_reference, i64 0, i64 %zext_ln215" [seq_align_multiple.cpp:215]   --->   Operation 18 'getelementptr' 'local_reference_addr' <Predicate = (!icmp_ln213)> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%local_reference_1_addr = getelementptr i8 %local_reference_1, i64 0, i64 %zext_ln215" [seq_align_multiple.cpp:215]   --->   Operation 19 'getelementptr' 'local_reference_1_addr' <Predicate = (!icmp_ln213)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%local_reference_2_addr = getelementptr i8 %local_reference_2, i64 0, i64 %zext_ln215" [seq_align_multiple.cpp:215]   --->   Operation 20 'getelementptr' 'local_reference_2_addr' <Predicate = (!icmp_ln213)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%local_reference_3_addr = getelementptr i8 %local_reference_3, i64 0, i64 %zext_ln215" [seq_align_multiple.cpp:215]   --->   Operation 21 'getelementptr' 'local_reference_3_addr' <Predicate = (!icmp_ln213)> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%local_reference_4_addr = getelementptr i8 %local_reference_4, i64 0, i64 %zext_ln215" [seq_align_multiple.cpp:215]   --->   Operation 22 'getelementptr' 'local_reference_4_addr' <Predicate = (!icmp_ln213)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%local_reference_5_addr = getelementptr i8 %local_reference_5, i64 0, i64 %zext_ln215" [seq_align_multiple.cpp:215]   --->   Operation 23 'getelementptr' 'local_reference_5_addr' <Predicate = (!icmp_ln213)> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%local_reference_6_addr = getelementptr i8 %local_reference_6, i64 0, i64 %zext_ln215" [seq_align_multiple.cpp:215]   --->   Operation 24 'getelementptr' 'local_reference_6_addr' <Predicate = (!icmp_ln213)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%local_reference_7_addr = getelementptr i8 %local_reference_7, i64 0, i64 %zext_ln215" [seq_align_multiple.cpp:215]   --->   Operation 25 'getelementptr' 'local_reference_7_addr' <Predicate = (!icmp_ln213)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%local_reference_8_addr = getelementptr i8 %local_reference_8, i64 0, i64 %zext_ln215" [seq_align_multiple.cpp:215]   --->   Operation 26 'getelementptr' 'local_reference_8_addr' <Predicate = (!icmp_ln213)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%local_reference_9_addr = getelementptr i8 %local_reference_9, i64 0, i64 %zext_ln215" [seq_align_multiple.cpp:215]   --->   Operation 27 'getelementptr' 'local_reference_9_addr' <Predicate = (!icmp_ln213)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%local_reference_10_addr = getelementptr i8 %local_reference_10, i64 0, i64 %zext_ln215" [seq_align_multiple.cpp:215]   --->   Operation 28 'getelementptr' 'local_reference_10_addr' <Predicate = (!icmp_ln213)> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%local_reference_11_addr = getelementptr i8 %local_reference_11, i64 0, i64 %zext_ln215" [seq_align_multiple.cpp:215]   --->   Operation 29 'getelementptr' 'local_reference_11_addr' <Predicate = (!icmp_ln213)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%local_reference_12_addr = getelementptr i8 %local_reference_12, i64 0, i64 %zext_ln215" [seq_align_multiple.cpp:215]   --->   Operation 30 'getelementptr' 'local_reference_12_addr' <Predicate = (!icmp_ln213)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%local_reference_13_addr = getelementptr i8 %local_reference_13, i64 0, i64 %zext_ln215" [seq_align_multiple.cpp:215]   --->   Operation 31 'getelementptr' 'local_reference_13_addr' <Predicate = (!icmp_ln213)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%local_reference_14_addr = getelementptr i8 %local_reference_14, i64 0, i64 %zext_ln215" [seq_align_multiple.cpp:215]   --->   Operation 32 'getelementptr' 'local_reference_14_addr' <Predicate = (!icmp_ln213)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%local_reference_15_addr = getelementptr i8 %local_reference_15, i64 0, i64 %zext_ln215" [seq_align_multiple.cpp:215]   --->   Operation 33 'getelementptr' 'local_reference_15_addr' <Predicate = (!icmp_ln213)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%trunc_ln215 = trunc i11 %i" [seq_align_multiple.cpp:215]   --->   Operation 34 'trunc' 'trunc_ln215' <Predicate = (!icmp_ln213)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.44ns)   --->   "%switch_ln215 = switch i4 %trunc_ln215, void %arrayidx82.case.15, i4 0, void %arrayidx82.case.0, i4 1, void %arrayidx82.case.1, i4 2, void %arrayidx82.case.2, i4 3, void %arrayidx82.case.3, i4 4, void %arrayidx82.case.4, i4 5, void %arrayidx82.case.5, i4 6, void %arrayidx82.case.6, i4 7, void %arrayidx82.case.7, i4 8, void %arrayidx82.case.8, i4 9, void %arrayidx82.case.9, i4 10, void %arrayidx82.case.10, i4 11, void %arrayidx82.case.11, i4 12, void %arrayidx82.case.12, i4 13, void %arrayidx82.case.13, i4 14, void %arrayidx82.case.14" [seq_align_multiple.cpp:215]   --->   Operation 35 'switch' 'switch_ln215' <Predicate = (!icmp_ln213)> <Delay = 0.44>
ST_1 : Operation 36 [1/1] (0.67ns)   --->   "%store_ln215 = store i8 %tmp, i6 %local_reference_14_addr" [seq_align_multiple.cpp:215]   --->   Operation 36 'store' 'store_ln215' <Predicate = (!icmp_ln213 & trunc_ln215 == 14)> <Delay = 0.67> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%br_ln215 = br void %arrayidx82.exit" [seq_align_multiple.cpp:215]   --->   Operation 37 'br' 'br_ln215' <Predicate = (!icmp_ln213 & trunc_ln215 == 14)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.67ns)   --->   "%store_ln215 = store i8 %tmp, i6 %local_reference_13_addr" [seq_align_multiple.cpp:215]   --->   Operation 38 'store' 'store_ln215' <Predicate = (!icmp_ln213 & trunc_ln215 == 13)> <Delay = 0.67> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%br_ln215 = br void %arrayidx82.exit" [seq_align_multiple.cpp:215]   --->   Operation 39 'br' 'br_ln215' <Predicate = (!icmp_ln213 & trunc_ln215 == 13)> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.67ns)   --->   "%store_ln215 = store i8 %tmp, i6 %local_reference_12_addr" [seq_align_multiple.cpp:215]   --->   Operation 40 'store' 'store_ln215' <Predicate = (!icmp_ln213 & trunc_ln215 == 12)> <Delay = 0.67> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%br_ln215 = br void %arrayidx82.exit" [seq_align_multiple.cpp:215]   --->   Operation 41 'br' 'br_ln215' <Predicate = (!icmp_ln213 & trunc_ln215 == 12)> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.67ns)   --->   "%store_ln215 = store i8 %tmp, i6 %local_reference_11_addr" [seq_align_multiple.cpp:215]   --->   Operation 42 'store' 'store_ln215' <Predicate = (!icmp_ln213 & trunc_ln215 == 11)> <Delay = 0.67> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%br_ln215 = br void %arrayidx82.exit" [seq_align_multiple.cpp:215]   --->   Operation 43 'br' 'br_ln215' <Predicate = (!icmp_ln213 & trunc_ln215 == 11)> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.67ns)   --->   "%store_ln215 = store i8 %tmp, i6 %local_reference_10_addr" [seq_align_multiple.cpp:215]   --->   Operation 44 'store' 'store_ln215' <Predicate = (!icmp_ln213 & trunc_ln215 == 10)> <Delay = 0.67> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%br_ln215 = br void %arrayidx82.exit" [seq_align_multiple.cpp:215]   --->   Operation 45 'br' 'br_ln215' <Predicate = (!icmp_ln213 & trunc_ln215 == 10)> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.67ns)   --->   "%store_ln215 = store i8 %tmp, i6 %local_reference_9_addr" [seq_align_multiple.cpp:215]   --->   Operation 46 'store' 'store_ln215' <Predicate = (!icmp_ln213 & trunc_ln215 == 9)> <Delay = 0.67> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%br_ln215 = br void %arrayidx82.exit" [seq_align_multiple.cpp:215]   --->   Operation 47 'br' 'br_ln215' <Predicate = (!icmp_ln213 & trunc_ln215 == 9)> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.67ns)   --->   "%store_ln215 = store i8 %tmp, i6 %local_reference_8_addr" [seq_align_multiple.cpp:215]   --->   Operation 48 'store' 'store_ln215' <Predicate = (!icmp_ln213 & trunc_ln215 == 8)> <Delay = 0.67> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%br_ln215 = br void %arrayidx82.exit" [seq_align_multiple.cpp:215]   --->   Operation 49 'br' 'br_ln215' <Predicate = (!icmp_ln213 & trunc_ln215 == 8)> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.67ns)   --->   "%store_ln215 = store i8 %tmp, i6 %local_reference_7_addr" [seq_align_multiple.cpp:215]   --->   Operation 50 'store' 'store_ln215' <Predicate = (!icmp_ln213 & trunc_ln215 == 7)> <Delay = 0.67> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%br_ln215 = br void %arrayidx82.exit" [seq_align_multiple.cpp:215]   --->   Operation 51 'br' 'br_ln215' <Predicate = (!icmp_ln213 & trunc_ln215 == 7)> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.67ns)   --->   "%store_ln215 = store i8 %tmp, i6 %local_reference_6_addr" [seq_align_multiple.cpp:215]   --->   Operation 52 'store' 'store_ln215' <Predicate = (!icmp_ln213 & trunc_ln215 == 6)> <Delay = 0.67> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%br_ln215 = br void %arrayidx82.exit" [seq_align_multiple.cpp:215]   --->   Operation 53 'br' 'br_ln215' <Predicate = (!icmp_ln213 & trunc_ln215 == 6)> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.67ns)   --->   "%store_ln215 = store i8 %tmp, i6 %local_reference_5_addr" [seq_align_multiple.cpp:215]   --->   Operation 54 'store' 'store_ln215' <Predicate = (!icmp_ln213 & trunc_ln215 == 5)> <Delay = 0.67> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%br_ln215 = br void %arrayidx82.exit" [seq_align_multiple.cpp:215]   --->   Operation 55 'br' 'br_ln215' <Predicate = (!icmp_ln213 & trunc_ln215 == 5)> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.67ns)   --->   "%store_ln215 = store i8 %tmp, i6 %local_reference_4_addr" [seq_align_multiple.cpp:215]   --->   Operation 56 'store' 'store_ln215' <Predicate = (!icmp_ln213 & trunc_ln215 == 4)> <Delay = 0.67> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%br_ln215 = br void %arrayidx82.exit" [seq_align_multiple.cpp:215]   --->   Operation 57 'br' 'br_ln215' <Predicate = (!icmp_ln213 & trunc_ln215 == 4)> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.67ns)   --->   "%store_ln215 = store i8 %tmp, i6 %local_reference_3_addr" [seq_align_multiple.cpp:215]   --->   Operation 58 'store' 'store_ln215' <Predicate = (!icmp_ln213 & trunc_ln215 == 3)> <Delay = 0.67> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%br_ln215 = br void %arrayidx82.exit" [seq_align_multiple.cpp:215]   --->   Operation 59 'br' 'br_ln215' <Predicate = (!icmp_ln213 & trunc_ln215 == 3)> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.67ns)   --->   "%store_ln215 = store i8 %tmp, i6 %local_reference_2_addr" [seq_align_multiple.cpp:215]   --->   Operation 60 'store' 'store_ln215' <Predicate = (!icmp_ln213 & trunc_ln215 == 2)> <Delay = 0.67> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%br_ln215 = br void %arrayidx82.exit" [seq_align_multiple.cpp:215]   --->   Operation 61 'br' 'br_ln215' <Predicate = (!icmp_ln213 & trunc_ln215 == 2)> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.67ns)   --->   "%store_ln215 = store i8 %tmp, i6 %local_reference_1_addr" [seq_align_multiple.cpp:215]   --->   Operation 62 'store' 'store_ln215' <Predicate = (!icmp_ln213 & trunc_ln215 == 1)> <Delay = 0.67> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%br_ln215 = br void %arrayidx82.exit" [seq_align_multiple.cpp:215]   --->   Operation 63 'br' 'br_ln215' <Predicate = (!icmp_ln213 & trunc_ln215 == 1)> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.67ns)   --->   "%store_ln215 = store i8 %tmp, i6 %local_reference_addr" [seq_align_multiple.cpp:215]   --->   Operation 64 'store' 'store_ln215' <Predicate = (!icmp_ln213 & trunc_ln215 == 0)> <Delay = 0.67> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%br_ln215 = br void %arrayidx82.exit" [seq_align_multiple.cpp:215]   --->   Operation 65 'br' 'br_ln215' <Predicate = (!icmp_ln213 & trunc_ln215 == 0)> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.67ns)   --->   "%store_ln215 = store i8 %tmp, i6 %local_reference_15_addr" [seq_align_multiple.cpp:215]   --->   Operation 66 'store' 'store_ln215' <Predicate = (!icmp_ln213 & trunc_ln215 == 15)> <Delay = 0.67> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%br_ln215 = br void %arrayidx82.exit" [seq_align_multiple.cpp:215]   --->   Operation 67 'br' 'br_ln215' <Predicate = (!icmp_ln213 & trunc_ln215 == 15)> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.42ns)   --->   "%store_ln213 = store i11 %add_ln213, i11 %i_1" [seq_align_multiple.cpp:213]   --->   Operation 68 'store' 'store_ln213' <Predicate = (!icmp_ln213)> <Delay = 0.42>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%br_ln213 = br void %for.inc83" [seq_align_multiple.cpp:213]   --->   Operation 69 'br' 'br_ln213' <Predicate = (!icmp_ln213)> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 70 'ret' 'ret_ln0' <Predicate = (icmp_ln213)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 4ns, clock uncertainty: 1.08ns.

 <State 1>: 1.62ns
The critical path consists of the following:
	'alloca' operation ('i') [18]  (0 ns)
	'load' operation ('i', seq_align_multiple.cpp:215) on local variable 'i' [23]  (0 ns)
	'add' operation ('add_ln213', seq_align_multiple.cpp:213) [27]  (0.798 ns)
	'store' operation ('store_ln213', seq_align_multiple.cpp:213) of variable 'add_ln213', seq_align_multiple.cpp:213 on local variable 'i' [101]  (0.427 ns)
	blocking operation 0.396 ns on control path)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
