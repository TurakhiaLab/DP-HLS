// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module seq_align_multiple_static_CopyColScore (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        init_col_scr_local_0_address0,
        init_col_scr_local_0_ce0,
        init_col_scr_local_0_we0,
        init_col_scr_local_0_d0,
        init_col_scr_local_0_q0,
        init_col_scr_local_0_address1,
        init_col_scr_local_0_ce1,
        init_col_scr_local_0_we1,
        init_col_scr_local_0_d1,
        init_col_scr_local_1_address0,
        init_col_scr_local_1_ce0,
        init_col_scr_local_1_we0,
        init_col_scr_local_1_d0,
        init_col_scr_local_1_q0,
        init_col_scr_local_1_address1,
        init_col_scr_local_1_ce1,
        init_col_scr_local_1_we1,
        init_col_scr_local_1_d1,
        init_col_scr_local_2_address0,
        init_col_scr_local_2_ce0,
        init_col_scr_local_2_we0,
        init_col_scr_local_2_d0,
        init_col_scr_local_2_q0,
        init_col_scr_local_2_address1,
        init_col_scr_local_2_ce1,
        init_col_scr_local_2_we1,
        init_col_scr_local_2_d1,
        init_col_scr_address0,
        init_col_scr_ce0,
        init_col_scr_q0,
        init_col_scr_address1,
        init_col_scr_ce1,
        init_col_scr_q1,
        idx
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_state2 = 18'd2;
parameter    ap_ST_fsm_state3 = 18'd4;
parameter    ap_ST_fsm_state4 = 18'd8;
parameter    ap_ST_fsm_state5 = 18'd16;
parameter    ap_ST_fsm_state6 = 18'd32;
parameter    ap_ST_fsm_state7 = 18'd64;
parameter    ap_ST_fsm_state8 = 18'd128;
parameter    ap_ST_fsm_state9 = 18'd256;
parameter    ap_ST_fsm_state10 = 18'd512;
parameter    ap_ST_fsm_state11 = 18'd1024;
parameter    ap_ST_fsm_state12 = 18'd2048;
parameter    ap_ST_fsm_state13 = 18'd4096;
parameter    ap_ST_fsm_state14 = 18'd8192;
parameter    ap_ST_fsm_state15 = 18'd16384;
parameter    ap_ST_fsm_state16 = 18'd32768;
parameter    ap_ST_fsm_state17 = 18'd65536;
parameter    ap_ST_fsm_state18 = 18'd131072;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] init_col_scr_local_0_address0;
output   init_col_scr_local_0_ce0;
output   init_col_scr_local_0_we0;
output  [15:0] init_col_scr_local_0_d0;
input  [15:0] init_col_scr_local_0_q0;
output  [5:0] init_col_scr_local_0_address1;
output   init_col_scr_local_0_ce1;
output   init_col_scr_local_0_we1;
output  [15:0] init_col_scr_local_0_d1;
output  [5:0] init_col_scr_local_1_address0;
output   init_col_scr_local_1_ce0;
output   init_col_scr_local_1_we0;
output  [15:0] init_col_scr_local_1_d0;
input  [15:0] init_col_scr_local_1_q0;
output  [5:0] init_col_scr_local_1_address1;
output   init_col_scr_local_1_ce1;
output   init_col_scr_local_1_we1;
output  [15:0] init_col_scr_local_1_d1;
output  [5:0] init_col_scr_local_2_address0;
output   init_col_scr_local_2_ce0;
output   init_col_scr_local_2_we0;
output  [15:0] init_col_scr_local_2_d0;
input  [15:0] init_col_scr_local_2_q0;
output  [5:0] init_col_scr_local_2_address1;
output   init_col_scr_local_2_ce1;
output   init_col_scr_local_2_we1;
output  [15:0] init_col_scr_local_2_d1;
output  [7:0] init_col_scr_address0;
output   init_col_scr_ce0;
input  [47:0] init_col_scr_q0;
output  [7:0] init_col_scr_address1;
output   init_col_scr_ce1;
input  [47:0] init_col_scr_q1;
input  [7:0] idx;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] init_col_scr_local_0_address0;
reg init_col_scr_local_0_ce0;
reg init_col_scr_local_0_we0;
reg[15:0] init_col_scr_local_0_d0;
reg[5:0] init_col_scr_local_0_address1;
reg init_col_scr_local_0_ce1;
reg init_col_scr_local_0_we1;
reg[15:0] init_col_scr_local_0_d1;
reg[5:0] init_col_scr_local_1_address0;
reg init_col_scr_local_1_ce0;
reg init_col_scr_local_1_we0;
reg[15:0] init_col_scr_local_1_d0;
reg[5:0] init_col_scr_local_1_address1;
reg init_col_scr_local_1_ce1;
reg init_col_scr_local_1_we1;
reg[15:0] init_col_scr_local_1_d1;
reg[5:0] init_col_scr_local_2_address0;
reg init_col_scr_local_2_ce0;
reg init_col_scr_local_2_we0;
reg[15:0] init_col_scr_local_2_d0;
reg[5:0] init_col_scr_local_2_address1;
reg init_col_scr_local_2_ce1;
reg init_col_scr_local_2_we1;
reg[15:0] init_col_scr_local_2_d1;
reg[7:0] init_col_scr_address0;
reg init_col_scr_ce0;
reg[7:0] init_col_scr_address1;
reg init_col_scr_ce1;

(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire   [63:0] zext_ln486_fu_1390_p1;
wire   [63:0] zext_ln486_1_fu_1401_p1;
wire   [63:0] zext_ln486_2_fu_1421_p1;
wire   [63:0] zext_ln486_3_fu_1431_p1;
wire   [63:0] zext_ln486_4_fu_1451_p1;
wire   [63:0] zext_ln486_5_fu_1461_p1;
wire   [63:0] zext_ln486_6_fu_1481_p1;
wire   [63:0] zext_ln486_7_fu_1491_p1;
wire   [63:0] zext_ln486_8_fu_1511_p1;
wire   [63:0] zext_ln486_9_fu_1521_p1;
wire   [63:0] zext_ln486_10_fu_1541_p1;
wire   [63:0] zext_ln486_11_fu_1551_p1;
wire   [63:0] zext_ln486_12_fu_1571_p1;
wire   [63:0] zext_ln486_13_fu_1581_p1;
wire   [63:0] zext_ln486_14_fu_1601_p1;
wire   [63:0] zext_ln486_15_fu_1611_p1;
wire   [63:0] zext_ln486_16_fu_1631_p1;
wire   [63:0] zext_ln486_17_fu_1641_p1;
wire   [63:0] zext_ln486_18_fu_1661_p1;
wire   [63:0] zext_ln486_19_fu_1671_p1;
wire   [63:0] zext_ln486_20_fu_1691_p1;
wire   [63:0] zext_ln486_21_fu_1701_p1;
wire   [63:0] zext_ln486_22_fu_1721_p1;
wire   [63:0] zext_ln486_23_fu_1731_p1;
wire   [63:0] zext_ln486_24_fu_1751_p1;
wire   [63:0] zext_ln486_25_fu_1761_p1;
wire   [63:0] zext_ln486_26_fu_1781_p1;
wire   [63:0] zext_ln486_27_fu_1791_p1;
wire   [63:0] zext_ln486_28_fu_1811_p1;
wire   [63:0] zext_ln486_29_fu_1821_p1;
wire   [63:0] zext_ln486_30_fu_1841_p1;
wire   [63:0] zext_ln486_31_fu_1851_p1;
wire    ap_CS_fsm_state18;
wire   [15:0] trunc_ln486_fu_1406_p1;
wire   [15:0] trunc_ln486_3_fu_1411_p1;
wire   [15:0] trunc_ln486_6_fu_1436_p1;
wire   [15:0] trunc_ln486_9_fu_1441_p1;
wire   [15:0] trunc_ln486_11_fu_1466_p1;
wire   [15:0] trunc_ln486_14_fu_1471_p1;
wire   [15:0] trunc_ln486_17_fu_1496_p1;
wire   [15:0] trunc_ln486_20_fu_1501_p1;
wire   [15:0] trunc_ln486_23_fu_1526_p1;
wire   [15:0] trunc_ln486_26_fu_1531_p1;
wire   [15:0] trunc_ln486_29_fu_1556_p1;
wire   [15:0] trunc_ln486_32_fu_1561_p1;
wire   [15:0] trunc_ln486_35_fu_1586_p1;
wire   [15:0] trunc_ln486_38_fu_1591_p1;
wire   [15:0] trunc_ln486_41_fu_1616_p1;
wire   [15:0] trunc_ln486_44_fu_1621_p1;
wire   [15:0] trunc_ln486_47_fu_1646_p1;
wire   [15:0] trunc_ln486_50_fu_1651_p1;
wire   [15:0] trunc_ln486_53_fu_1676_p1;
wire   [15:0] trunc_ln486_56_fu_1681_p1;
wire   [15:0] trunc_ln486_59_fu_1706_p1;
wire   [15:0] trunc_ln486_62_fu_1711_p1;
wire   [15:0] trunc_ln486_65_fu_1736_p1;
wire   [15:0] trunc_ln486_68_fu_1741_p1;
wire   [15:0] trunc_ln486_71_fu_1766_p1;
wire   [15:0] trunc_ln486_74_fu_1771_p1;
wire   [15:0] trunc_ln486_77_fu_1796_p1;
wire   [15:0] trunc_ln486_80_fu_1801_p1;
wire   [15:0] trunc_ln486_83_fu_1826_p1;
wire   [15:0] trunc_ln486_86_fu_1831_p1;
wire   [15:0] trunc_ln486_89_fu_1856_p1;
wire   [15:0] trunc_ln486_92_fu_1861_p1;
wire   [7:0] add_ln486_fu_1395_p2;
wire   [7:0] add_ln486_1_fu_1416_p2;
wire   [7:0] add_ln486_2_fu_1426_p2;
wire   [7:0] add_ln486_3_fu_1446_p2;
wire   [7:0] add_ln486_4_fu_1456_p2;
wire   [7:0] add_ln486_5_fu_1476_p2;
wire   [7:0] add_ln486_6_fu_1486_p2;
wire   [7:0] add_ln486_7_fu_1506_p2;
wire   [7:0] add_ln486_8_fu_1516_p2;
wire   [7:0] add_ln486_9_fu_1536_p2;
wire   [7:0] add_ln486_10_fu_1546_p2;
wire   [7:0] add_ln486_11_fu_1566_p2;
wire   [7:0] add_ln486_12_fu_1576_p2;
wire   [7:0] add_ln486_13_fu_1596_p2;
wire   [7:0] add_ln486_14_fu_1606_p2;
wire   [7:0] add_ln486_15_fu_1626_p2;
wire   [7:0] add_ln486_16_fu_1636_p2;
wire   [7:0] add_ln486_17_fu_1656_p2;
wire   [7:0] add_ln486_18_fu_1666_p2;
wire   [7:0] add_ln486_19_fu_1686_p2;
wire   [7:0] add_ln486_20_fu_1696_p2;
wire   [7:0] add_ln486_21_fu_1716_p2;
wire   [7:0] add_ln486_22_fu_1726_p2;
wire   [7:0] add_ln486_23_fu_1746_p2;
wire   [7:0] add_ln486_24_fu_1756_p2;
wire   [7:0] add_ln486_25_fu_1776_p2;
wire   [7:0] add_ln486_26_fu_1786_p2;
wire   [7:0] add_ln486_27_fu_1806_p2;
wire   [7:0] add_ln486_28_fu_1816_p2;
wire   [7:0] add_ln486_29_fu_1836_p2;
wire   [7:0] add_ln486_30_fu_1846_p2;
reg   [17:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 18'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        init_col_scr_address0 = zext_ln486_31_fu_1851_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        init_col_scr_address0 = zext_ln486_29_fu_1821_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        init_col_scr_address0 = zext_ln486_27_fu_1791_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        init_col_scr_address0 = zext_ln486_25_fu_1761_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        init_col_scr_address0 = zext_ln486_23_fu_1731_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        init_col_scr_address0 = zext_ln486_21_fu_1701_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        init_col_scr_address0 = zext_ln486_19_fu_1671_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        init_col_scr_address0 = zext_ln486_17_fu_1641_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        init_col_scr_address0 = zext_ln486_15_fu_1611_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        init_col_scr_address0 = zext_ln486_13_fu_1581_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        init_col_scr_address0 = zext_ln486_11_fu_1551_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        init_col_scr_address0 = zext_ln486_9_fu_1521_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        init_col_scr_address0 = zext_ln486_7_fu_1491_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        init_col_scr_address0 = zext_ln486_5_fu_1461_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        init_col_scr_address0 = zext_ln486_3_fu_1431_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        init_col_scr_address0 = zext_ln486_1_fu_1401_p1;
    end else begin
        init_col_scr_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        init_col_scr_address1 = zext_ln486_30_fu_1841_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        init_col_scr_address1 = zext_ln486_28_fu_1811_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        init_col_scr_address1 = zext_ln486_26_fu_1781_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        init_col_scr_address1 = zext_ln486_24_fu_1751_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        init_col_scr_address1 = zext_ln486_22_fu_1721_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        init_col_scr_address1 = zext_ln486_20_fu_1691_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        init_col_scr_address1 = zext_ln486_18_fu_1661_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        init_col_scr_address1 = zext_ln486_16_fu_1631_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        init_col_scr_address1 = zext_ln486_14_fu_1601_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        init_col_scr_address1 = zext_ln486_12_fu_1571_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        init_col_scr_address1 = zext_ln486_10_fu_1541_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        init_col_scr_address1 = zext_ln486_8_fu_1511_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        init_col_scr_address1 = zext_ln486_6_fu_1481_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        init_col_scr_address1 = zext_ln486_4_fu_1451_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        init_col_scr_address1 = zext_ln486_2_fu_1421_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        init_col_scr_address1 = zext_ln486_fu_1390_p1;
    end else begin
        init_col_scr_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        init_col_scr_ce0 = 1'b1;
    end else begin
        init_col_scr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        init_col_scr_ce1 = 1'b1;
    end else begin
        init_col_scr_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        init_col_scr_local_0_address0 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        init_col_scr_local_0_address0 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        init_col_scr_local_0_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        init_col_scr_local_0_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        init_col_scr_local_0_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        init_col_scr_local_0_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        init_col_scr_local_0_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        init_col_scr_local_0_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        init_col_scr_local_0_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        init_col_scr_local_0_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        init_col_scr_local_0_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        init_col_scr_local_0_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        init_col_scr_local_0_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        init_col_scr_local_0_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        init_col_scr_local_0_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        init_col_scr_local_0_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        init_col_scr_local_0_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        init_col_scr_local_0_address0 = 64'd32;
    end else begin
        init_col_scr_local_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        init_col_scr_local_0_address1 = 64'd32;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        init_col_scr_local_0_address1 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        init_col_scr_local_0_address1 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        init_col_scr_local_0_address1 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        init_col_scr_local_0_address1 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        init_col_scr_local_0_address1 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        init_col_scr_local_0_address1 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        init_col_scr_local_0_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        init_col_scr_local_0_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        init_col_scr_local_0_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        init_col_scr_local_0_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        init_col_scr_local_0_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        init_col_scr_local_0_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        init_col_scr_local_0_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        init_col_scr_local_0_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        init_col_scr_local_0_address1 = 64'd1;
    end else begin
        init_col_scr_local_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        init_col_scr_local_0_ce0 = 1'b1;
    end else begin
        init_col_scr_local_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        init_col_scr_local_0_ce1 = 1'b1;
    end else begin
        init_col_scr_local_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        init_col_scr_local_0_d0 = trunc_ln486_89_fu_1856_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        init_col_scr_local_0_d0 = trunc_ln486_83_fu_1826_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        init_col_scr_local_0_d0 = trunc_ln486_77_fu_1796_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        init_col_scr_local_0_d0 = trunc_ln486_71_fu_1766_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        init_col_scr_local_0_d0 = trunc_ln486_65_fu_1736_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        init_col_scr_local_0_d0 = trunc_ln486_59_fu_1706_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        init_col_scr_local_0_d0 = trunc_ln486_53_fu_1676_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        init_col_scr_local_0_d0 = trunc_ln486_47_fu_1646_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        init_col_scr_local_0_d0 = trunc_ln486_41_fu_1616_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        init_col_scr_local_0_d0 = trunc_ln486_35_fu_1586_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        init_col_scr_local_0_d0 = trunc_ln486_29_fu_1556_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        init_col_scr_local_0_d0 = trunc_ln486_23_fu_1526_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        init_col_scr_local_0_d0 = trunc_ln486_17_fu_1496_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        init_col_scr_local_0_d0 = trunc_ln486_11_fu_1466_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        init_col_scr_local_0_d0 = trunc_ln486_6_fu_1436_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        init_col_scr_local_0_d0 = trunc_ln486_3_fu_1411_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        init_col_scr_local_0_d0 = init_col_scr_local_0_q0;
    end else begin
        init_col_scr_local_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        init_col_scr_local_0_d1 = trunc_ln486_92_fu_1861_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        init_col_scr_local_0_d1 = trunc_ln486_86_fu_1831_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        init_col_scr_local_0_d1 = trunc_ln486_80_fu_1801_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        init_col_scr_local_0_d1 = trunc_ln486_74_fu_1771_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        init_col_scr_local_0_d1 = trunc_ln486_68_fu_1741_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        init_col_scr_local_0_d1 = trunc_ln486_62_fu_1711_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        init_col_scr_local_0_d1 = trunc_ln486_56_fu_1681_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        init_col_scr_local_0_d1 = trunc_ln486_50_fu_1651_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        init_col_scr_local_0_d1 = trunc_ln486_44_fu_1621_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        init_col_scr_local_0_d1 = trunc_ln486_38_fu_1591_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        init_col_scr_local_0_d1 = trunc_ln486_32_fu_1561_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        init_col_scr_local_0_d1 = trunc_ln486_26_fu_1531_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        init_col_scr_local_0_d1 = trunc_ln486_20_fu_1501_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        init_col_scr_local_0_d1 = trunc_ln486_14_fu_1471_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        init_col_scr_local_0_d1 = trunc_ln486_9_fu_1441_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        init_col_scr_local_0_d1 = trunc_ln486_fu_1406_p1;
    end else begin
        init_col_scr_local_0_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        init_col_scr_local_0_we0 = 1'b1;
    end else begin
        init_col_scr_local_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        init_col_scr_local_0_we1 = 1'b1;
    end else begin
        init_col_scr_local_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        init_col_scr_local_1_address0 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        init_col_scr_local_1_address0 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        init_col_scr_local_1_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        init_col_scr_local_1_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        init_col_scr_local_1_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        init_col_scr_local_1_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        init_col_scr_local_1_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        init_col_scr_local_1_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        init_col_scr_local_1_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        init_col_scr_local_1_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        init_col_scr_local_1_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        init_col_scr_local_1_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        init_col_scr_local_1_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        init_col_scr_local_1_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        init_col_scr_local_1_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        init_col_scr_local_1_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        init_col_scr_local_1_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        init_col_scr_local_1_address0 = 64'd32;
    end else begin
        init_col_scr_local_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        init_col_scr_local_1_address1 = 64'd32;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        init_col_scr_local_1_address1 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        init_col_scr_local_1_address1 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        init_col_scr_local_1_address1 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        init_col_scr_local_1_address1 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        init_col_scr_local_1_address1 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        init_col_scr_local_1_address1 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        init_col_scr_local_1_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        init_col_scr_local_1_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        init_col_scr_local_1_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        init_col_scr_local_1_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        init_col_scr_local_1_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        init_col_scr_local_1_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        init_col_scr_local_1_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        init_col_scr_local_1_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        init_col_scr_local_1_address1 = 64'd1;
    end else begin
        init_col_scr_local_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        init_col_scr_local_1_ce0 = 1'b1;
    end else begin
        init_col_scr_local_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        init_col_scr_local_1_ce1 = 1'b1;
    end else begin
        init_col_scr_local_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        init_col_scr_local_1_d0 = {{init_col_scr_q1[31:16]}};
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        init_col_scr_local_1_d0 = {{init_col_scr_q0[31:16]}};
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        init_col_scr_local_1_d0 = init_col_scr_local_1_q0;
    end else begin
        init_col_scr_local_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        init_col_scr_local_1_d1 = {{init_col_scr_q0[31:16]}};
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        init_col_scr_local_1_d1 = {{init_col_scr_q1[31:16]}};
    end else begin
        init_col_scr_local_1_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        init_col_scr_local_1_we0 = 1'b1;
    end else begin
        init_col_scr_local_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        init_col_scr_local_1_we1 = 1'b1;
    end else begin
        init_col_scr_local_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        init_col_scr_local_2_address0 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        init_col_scr_local_2_address0 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        init_col_scr_local_2_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        init_col_scr_local_2_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        init_col_scr_local_2_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        init_col_scr_local_2_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        init_col_scr_local_2_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        init_col_scr_local_2_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        init_col_scr_local_2_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        init_col_scr_local_2_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        init_col_scr_local_2_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        init_col_scr_local_2_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        init_col_scr_local_2_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        init_col_scr_local_2_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        init_col_scr_local_2_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        init_col_scr_local_2_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        init_col_scr_local_2_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        init_col_scr_local_2_address0 = 64'd32;
    end else begin
        init_col_scr_local_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        init_col_scr_local_2_address1 = 64'd32;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        init_col_scr_local_2_address1 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        init_col_scr_local_2_address1 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        init_col_scr_local_2_address1 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        init_col_scr_local_2_address1 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        init_col_scr_local_2_address1 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        init_col_scr_local_2_address1 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        init_col_scr_local_2_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        init_col_scr_local_2_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        init_col_scr_local_2_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        init_col_scr_local_2_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        init_col_scr_local_2_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        init_col_scr_local_2_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        init_col_scr_local_2_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        init_col_scr_local_2_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        init_col_scr_local_2_address1 = 64'd1;
    end else begin
        init_col_scr_local_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        init_col_scr_local_2_ce0 = 1'b1;
    end else begin
        init_col_scr_local_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        init_col_scr_local_2_ce1 = 1'b1;
    end else begin
        init_col_scr_local_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        init_col_scr_local_2_d0 = {{init_col_scr_q1[47:32]}};
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        init_col_scr_local_2_d0 = {{init_col_scr_q0[47:32]}};
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        init_col_scr_local_2_d0 = init_col_scr_local_2_q0;
    end else begin
        init_col_scr_local_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        init_col_scr_local_2_d1 = {{init_col_scr_q0[47:32]}};
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        init_col_scr_local_2_d1 = {{init_col_scr_q1[47:32]}};
    end else begin
        init_col_scr_local_2_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        init_col_scr_local_2_we0 = 1'b1;
    end else begin
        init_col_scr_local_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        init_col_scr_local_2_we1 = 1'b1;
    end else begin
        init_col_scr_local_2_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln486_10_fu_1546_p2 = (idx + 8'd11);

assign add_ln486_11_fu_1566_p2 = (idx + 8'd12);

assign add_ln486_12_fu_1576_p2 = (idx + 8'd13);

assign add_ln486_13_fu_1596_p2 = (idx + 8'd14);

assign add_ln486_14_fu_1606_p2 = (idx + 8'd15);

assign add_ln486_15_fu_1626_p2 = (idx + 8'd16);

assign add_ln486_16_fu_1636_p2 = (idx + 8'd17);

assign add_ln486_17_fu_1656_p2 = (idx + 8'd18);

assign add_ln486_18_fu_1666_p2 = (idx + 8'd19);

assign add_ln486_19_fu_1686_p2 = (idx + 8'd20);

assign add_ln486_1_fu_1416_p2 = (idx + 8'd2);

assign add_ln486_20_fu_1696_p2 = (idx + 8'd21);

assign add_ln486_21_fu_1716_p2 = (idx + 8'd22);

assign add_ln486_22_fu_1726_p2 = (idx + 8'd23);

assign add_ln486_23_fu_1746_p2 = (idx + 8'd24);

assign add_ln486_24_fu_1756_p2 = (idx + 8'd25);

assign add_ln486_25_fu_1776_p2 = (idx + 8'd26);

assign add_ln486_26_fu_1786_p2 = (idx + 8'd27);

assign add_ln486_27_fu_1806_p2 = (idx + 8'd28);

assign add_ln486_28_fu_1816_p2 = (idx + 8'd29);

assign add_ln486_29_fu_1836_p2 = (idx + 8'd30);

assign add_ln486_2_fu_1426_p2 = (idx + 8'd3);

assign add_ln486_30_fu_1846_p2 = (idx + 8'd31);

assign add_ln486_3_fu_1446_p2 = (idx + 8'd4);

assign add_ln486_4_fu_1456_p2 = (idx + 8'd5);

assign add_ln486_5_fu_1476_p2 = (idx + 8'd6);

assign add_ln486_6_fu_1486_p2 = (idx + 8'd7);

assign add_ln486_7_fu_1506_p2 = (idx + 8'd8);

assign add_ln486_8_fu_1516_p2 = (idx + 8'd9);

assign add_ln486_9_fu_1536_p2 = (idx + 8'd10);

assign add_ln486_fu_1395_p2 = (idx + 8'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign trunc_ln486_11_fu_1466_p1 = init_col_scr_q1[15:0];

assign trunc_ln486_14_fu_1471_p1 = init_col_scr_q0[15:0];

assign trunc_ln486_17_fu_1496_p1 = init_col_scr_q1[15:0];

assign trunc_ln486_20_fu_1501_p1 = init_col_scr_q0[15:0];

assign trunc_ln486_23_fu_1526_p1 = init_col_scr_q1[15:0];

assign trunc_ln486_26_fu_1531_p1 = init_col_scr_q0[15:0];

assign trunc_ln486_29_fu_1556_p1 = init_col_scr_q1[15:0];

assign trunc_ln486_32_fu_1561_p1 = init_col_scr_q0[15:0];

assign trunc_ln486_35_fu_1586_p1 = init_col_scr_q1[15:0];

assign trunc_ln486_38_fu_1591_p1 = init_col_scr_q0[15:0];

assign trunc_ln486_3_fu_1411_p1 = init_col_scr_q0[15:0];

assign trunc_ln486_41_fu_1616_p1 = init_col_scr_q1[15:0];

assign trunc_ln486_44_fu_1621_p1 = init_col_scr_q0[15:0];

assign trunc_ln486_47_fu_1646_p1 = init_col_scr_q1[15:0];

assign trunc_ln486_50_fu_1651_p1 = init_col_scr_q0[15:0];

assign trunc_ln486_53_fu_1676_p1 = init_col_scr_q1[15:0];

assign trunc_ln486_56_fu_1681_p1 = init_col_scr_q0[15:0];

assign trunc_ln486_59_fu_1706_p1 = init_col_scr_q1[15:0];

assign trunc_ln486_62_fu_1711_p1 = init_col_scr_q0[15:0];

assign trunc_ln486_65_fu_1736_p1 = init_col_scr_q1[15:0];

assign trunc_ln486_68_fu_1741_p1 = init_col_scr_q0[15:0];

assign trunc_ln486_6_fu_1436_p1 = init_col_scr_q1[15:0];

assign trunc_ln486_71_fu_1766_p1 = init_col_scr_q1[15:0];

assign trunc_ln486_74_fu_1771_p1 = init_col_scr_q0[15:0];

assign trunc_ln486_77_fu_1796_p1 = init_col_scr_q1[15:0];

assign trunc_ln486_80_fu_1801_p1 = init_col_scr_q0[15:0];

assign trunc_ln486_83_fu_1826_p1 = init_col_scr_q1[15:0];

assign trunc_ln486_86_fu_1831_p1 = init_col_scr_q0[15:0];

assign trunc_ln486_89_fu_1856_p1 = init_col_scr_q1[15:0];

assign trunc_ln486_92_fu_1861_p1 = init_col_scr_q0[15:0];

assign trunc_ln486_9_fu_1441_p1 = init_col_scr_q0[15:0];

assign trunc_ln486_fu_1406_p1 = init_col_scr_q1[15:0];

assign zext_ln486_10_fu_1541_p1 = add_ln486_9_fu_1536_p2;

assign zext_ln486_11_fu_1551_p1 = add_ln486_10_fu_1546_p2;

assign zext_ln486_12_fu_1571_p1 = add_ln486_11_fu_1566_p2;

assign zext_ln486_13_fu_1581_p1 = add_ln486_12_fu_1576_p2;

assign zext_ln486_14_fu_1601_p1 = add_ln486_13_fu_1596_p2;

assign zext_ln486_15_fu_1611_p1 = add_ln486_14_fu_1606_p2;

assign zext_ln486_16_fu_1631_p1 = add_ln486_15_fu_1626_p2;

assign zext_ln486_17_fu_1641_p1 = add_ln486_16_fu_1636_p2;

assign zext_ln486_18_fu_1661_p1 = add_ln486_17_fu_1656_p2;

assign zext_ln486_19_fu_1671_p1 = add_ln486_18_fu_1666_p2;

assign zext_ln486_1_fu_1401_p1 = add_ln486_fu_1395_p2;

assign zext_ln486_20_fu_1691_p1 = add_ln486_19_fu_1686_p2;

assign zext_ln486_21_fu_1701_p1 = add_ln486_20_fu_1696_p2;

assign zext_ln486_22_fu_1721_p1 = add_ln486_21_fu_1716_p2;

assign zext_ln486_23_fu_1731_p1 = add_ln486_22_fu_1726_p2;

assign zext_ln486_24_fu_1751_p1 = add_ln486_23_fu_1746_p2;

assign zext_ln486_25_fu_1761_p1 = add_ln486_24_fu_1756_p2;

assign zext_ln486_26_fu_1781_p1 = add_ln486_25_fu_1776_p2;

assign zext_ln486_27_fu_1791_p1 = add_ln486_26_fu_1786_p2;

assign zext_ln486_28_fu_1811_p1 = add_ln486_27_fu_1806_p2;

assign zext_ln486_29_fu_1821_p1 = add_ln486_28_fu_1816_p2;

assign zext_ln486_2_fu_1421_p1 = add_ln486_1_fu_1416_p2;

assign zext_ln486_30_fu_1841_p1 = add_ln486_29_fu_1836_p2;

assign zext_ln486_31_fu_1851_p1 = add_ln486_30_fu_1846_p2;

assign zext_ln486_3_fu_1431_p1 = add_ln486_2_fu_1426_p2;

assign zext_ln486_4_fu_1451_p1 = add_ln486_3_fu_1446_p2;

assign zext_ln486_5_fu_1461_p1 = add_ln486_4_fu_1456_p2;

assign zext_ln486_6_fu_1481_p1 = add_ln486_5_fu_1476_p2;

assign zext_ln486_7_fu_1491_p1 = add_ln486_6_fu_1486_p2;

assign zext_ln486_8_fu_1511_p1 = add_ln486_7_fu_1506_p2;

assign zext_ln486_9_fu_1521_p1 = add_ln486_8_fu_1516_p2;

assign zext_ln486_fu_1390_p1 = idx;

endmodule //seq_align_multiple_static_CopyColScore
